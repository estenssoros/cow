// Code generated by go-bindata.
// sources:
// templates/.DS_Store
// templates/Gopkg.toml
// templates/package.json
// templates/tsconfig.json
// templates/public/favicon.ico
// templates/public/index.html
// templates/public/manifest.json
// templates/server/app.go
// templates/server/db.go
// templates/server/main.go
// templates/server/middleware.go
// templates/server/api/routes.go
// templates/src/App.css
// templates/src/App.test.tsx
// templates/src/App.tsx
// templates/src/index.css
// templates/src/index.tsx
// templates/src/react-app-env.d.ts
// templates/src/serviceWorker.ts
// templates/src/actions/login.action.ts
// templates/src/actions/logout.action.ts
// templates/src/constants/action-types.ts
// templates/src/components/navigation/navbar.component.tsx
// templates/src/components/navigation/privateRoute.component.tsx
// templates/src/modules/api.module.ts
// templates/src/modules/endpoint.module.ts
// templates/src/reducers/index.ts
// templates/src/reducers/user.reducer.ts
// templates/src/store/index.ts
// templates/src/views/dashboard.view.tsx
// templates/src/views/login.view.tsx
// DO NOT EDIT!

package initializer

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xd8\x3b\xaa\xc2\x40\x18\xc5\xf1\xf3\x4d\x52\x0c\xdc\x66\xca\x5b\x4e\x73\x17\x70\x77\x30\x84\xb8\x82\x6c\x40\x50\xb0\x91\x08\x11\xad\xb3\x74\x19\xe6\x14\x83\x62\x3a\x31\xca\xf9\x35\x7f\xc9\x43\x25\x45\xe6\x01\xc0\xba\xcb\xfe\x1f\x08\x00\x3c\x4a\xf1\x87\x47\x06\xa0\xc1\x19\x13\x76\xd7\x61\x1a\x8f\xa7\xf1\xc0\xa3\x80\xab\xae\xb1\xfc\x1d\x77\xe7\x45\x44\x44\x64\x7d\x38\x4a\xfb\x9f\x77\xff\x11\x11\x59\x9d\xfc\x7e\x88\x6c\x62\xe7\x52\xe3\x79\xc7\xb6\xd5\x3d\x81\x8d\x6c\x62\xe7\x52\xe3\x75\x8e\x6d\x59\xcf\x06\x36\xb2\x89\x9d\x4b\xf9\xd2\x32\x2e\x3e\x8c\xbf\x6c\x9e\x0d\x6c\x64\xd3\x6b\x9e\x8d\xc8\xa7\x6b\x4a\x42\x1e\xff\x37\x4f\xd6\xff\x22\xf2\xdd\xac\xed\x87\xbe\x5b\xd8\xb6\xcb\xc7\xb7\xd5\xe7\xa5\x49\x80\x2b\x1b\x8a\xbf\xd5\xbd\x9a\x08\x88\xac\xcc\x2d\x00\x00\xff\xff\x92\x84\xba\x65\x04\x18\x00\x00")

func Ds_storeBytes() ([]byte, error) {
	return bindataRead(
		_Ds_store,
		".DS_Store",
	)
}

func Ds_store() (*asset, error) {
	bytes, err := Ds_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1550809052, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gopkgToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x31\x6f\xdb\x30\x10\x85\x77\xfe\x8a\x03\xb5\xd6\xa4\x93\x74\x2a\xe0\xa1\x53\xf7\x4e\x2d\x8c\x0c\x14\x79\xa6\x58\x89\x3c\xf6\x78\x34\x92\x7f\x5f\xc8\x4e\xd2\x24\x8e\x97\x2c\x82\xf0\xf8\xde\xfb\x1e\x6e\x80\x1f\x54\xe7\x68\x84\xf2\x02\xf8\xe0\x72\x5d\x50\x0d\x6a\x80\x9f\x78\x40\x06\x21\x98\x44\x6a\xfb\x66\x6d\xa4\xc5\x95\x68\x62\x92\xa9\x8f\x26\x91\x0d\x58\x6d\x20\xdf\xec\xff\x06\x33\x49\x5e\xd4\x00\x07\x62\x08\x28\x2e\x2d\x18\x5e\x03\x02\xf9\x9e\xb1\x88\x93\x44\xc5\x9c\x38\x8c\x7f\x7b\x62\x0c\xb0\x83\xbd\x7e\x2a\xf7\x94\x6d\x6f\xc8\x56\xa6\x54\xa2\xf5\x39\x9c\xff\xf4\xbd\x1a\x20\xc5\x42\xd7\xfc\x95\xe9\x0f\x7a\xb1\x75\x8e\xbf\xf4\x17\xd0\x63\x92\xb1\xfb\x19\xc5\x10\xc7\x0b\xcb\xf7\xf5\xf3\x7b\x2d\x55\x03\xec\xf7\x9e\x4a\x13\x76\xa9\xc8\xfd\xca\x01\x28\x2e\x23\xec\xe0\x1a\x45\x9f\x4c\x47\xe4\x96\xa8\xac\xbe\x1b\xb3\x35\x5b\xfd\xc9\xb6\xdb\x73\xdd\xc8\xae\xf8\x69\xf5\x05\x3c\x9e\xa5\x46\x9d\xfd\xfb\x68\x7e\x3c\x10\xcf\xaf\xc3\x27\x2a\x1d\x91\x39\x05\xbc\xce\x7c\xb0\x8f\x17\xc3\x6f\xcd\xd7\x97\xe1\x95\x7b\xc1\xa7\x34\x95\x4d\x24\xd8\xc1\xc1\x2d\x0d\x4f\x52\xa4\x8d\x60\x93\x06\x3b\x10\xee\x67\xad\x97\xde\x30\x6c\xaa\xf3\xb3\x8b\xf8\xf2\xa4\xd4\xbb\x23\x7c\x38\x67\x71\x63\x13\xe7\x67\x8b\x7e\x22\xad\xde\xcc\xba\x33\x77\xe6\x66\xab\x95\x7a\x1e\x75\xc9\xbf\x4a\x07\x50\x6f\xae\xf1\x21\xbc\x39\x21\x4e\x36\x92\xe9\x3d\x85\x95\xce\x78\x4c\xcf\xf8\xec\x9a\x20\xeb\x7f\x01\x00\x00\xff\xff\xe0\x12\x51\xa1\x22\x03\x00\x00")

func gopkgTomlBytes() ([]byte, error) {
	return bindataRead(
		_gopkgToml,
		"Gopkg.toml",
	)
}

func gopkgToml() (*asset, error) {
	bytes, err := gopkgTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Gopkg.toml", size: 802, mode: os.FileMode(420), modTime: time.Unix(1550802788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _packageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\xdb\x8e\xd3\x3c\x10\xc7\xef\xfb\x14\x56\xa4\xef\xee\xcb\x10\x3b\xd9\x03\x2b\x40\x20\xb8\xe6\x05\x10\x45\x6e\x3c\x5b\xcc\xa6\xb6\x65\x3b\x6d\x57\x55\xdf\x1d\xf9\xd0\x3a\xe9\x46\x5c\x66\x7e\xff\x39\xfd\xe3\x39\xad\x08\xa9\x14\xdf\x61\xf5\x44\xaa\xd3\x09\xbe\x18\xf3\x9d\xef\xf0\x7c\xae\xfe\x0f\x64\x8f\xd6\x49\xad\x02\x6c\x80\x42\x93\xa2\xc6\xca\x3d\xf7\x21\xc5\xdb\x11\x63\x48\xa0\x41\x25\x50\xf5\x12\x5d\xf5\x44\x42\x59\x42\xaa\xcf\xfe\xd5\xa0\x7b\xf7\x07\x9d\x0f\x25\x58\x0b\x2d\xd0\x36\x16\x99\xd0\x83\xaf\x05\xf6\x5a\xc4\x19\xd6\x0c\x18\xd0\x1b\x89\xca\x90\x36\x40\x19\xd0\xf7\x37\xd8\x22\xef\x63\x03\x7a\x0f\x0f\xc0\xd8\x12\xae\x85\xde\x65\x49\x03\xf4\xb6\x41\x92\x58\x14\xe3\x31\x0e\xf1\x10\x44\xcb\x1a\x3d\x7a\xb4\x97\x6a\xeb\x2e\x6c\xf4\x46\x28\xc6\x63\x6d\x82\x75\x69\xef\xb9\x8a\x1f\xa5\x76\x31\xdc\x00\x7d\xcc\x9e\x12\x52\x2d\xf8\x70\x65\xd7\x0d\xd7\x71\xc5\x79\xfc\x3a\xcc\x12\x2b\x3b\x85\xc5\x6f\xe1\x3f\x96\x49\x0a\xd7\x5b\x69\x7c\x1c\x97\x01\x85\x76\x4e\xbd\xe6\xce\xcb\xe7\xd7\x9c\x7d\x07\xac\xf0\x4b\xdb\x6e\x6a\x65\xb2\x66\xd0\xdb\x2d\xda\x48\x5b\x68\xe0\x7e\x4e\xa7\xc6\xdd\x01\x9d\x0d\x1d\xb8\xff\x3d\xaa\x97\x6c\x51\x5b\xa0\xc3\x1d\x57\x5e\xf6\xf5\x28\xeb\xde\xb9\x2c\xe8\x4a\xef\xa9\xa0\xf8\xd9\xc0\x63\x57\x8a\xc4\x1f\x18\x57\x0e\xb0\x05\x06\x5d\xb5\x22\xe4\x1c\xdf\x78\xf1\x22\x3f\x6f\xe7\xb9\x8d\xc2\x99\x57\x24\x85\x73\xc5\xcd\x28\x07\xf1\x56\x93\xc2\x97\xae\xf9\x3e\xe6\x92\x18\xbd\x36\x47\x37\x48\xe5\xbf\x6a\xf5\x2c\xb7\x65\x02\x3c\x7a\x54\xc2\x95\x64\x6e\x4c\xc9\xd9\x58\x7d\x70\x68\xdd\x90\xec\xfc\x91\x72\x3e\x35\xc0\xfe\xbb\xb4\x56\xda\x13\x81\x5c\x4c\xbf\x25\x92\x0f\x1f\x49\xb9\x91\x10\xd3\xe6\xd7\x4e\x2a\x49\xf8\x30\x84\xfa\x3f\xf3\xd1\xef\xbf\x2d\xde\xfd\x01\x37\x86\xf7\x2f\x75\x3f\xc8\xfc\x97\xc3\x4d\x5f\xe7\xb2\xe8\xf4\x30\x7a\xa9\xd5\x24\xc7\xa3\x75\xe9\x51\xb4\x40\xbb\x2c\x5f\x9d\x57\x7f\x03\x00\x00\xff\xff\xdb\x70\x16\xa3\xa2\x04\x00\x00")

func packageJsonBytes() ([]byte, error) {
	return bindataRead(
		_packageJson,
		"package.json",
	)
}

func packageJson() (*asset, error) {
	bytes, err := packageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "package.json", size: 1186, mode: os.FileMode(420), modTime: time.Unix(1550811704, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tsconfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6f\x53\x31\x0c\xc7\xef\xfd\x14\x51\xce\x3b\x00\x17\xa4\xde\x50\x3b\xa4\x37\xad\x20\x0d\x38\xa1\x09\xa5\x79\xee\x6a\x96\xd8\x91\xed\x8c\x37\xa1\x7d\x77\x94\xb6\xd9\xd6\x96\x5d\x7f\xbf\xe8\x6f\x3b\xf6\xdf\x99\x73\x3e\x72\x2e\x98\x40\xbe\x16\x43\x26\xf5\x73\xd7\xb0\x73\x9e\xab\x2d\x51\xfc\xdc\xf9\x75\xc5\x34\xfa\x8b\x3d\xce\x3c\xd6\x04\x0d\x83\x12\x4c\xd6\xb9\x05\xb9\x03\xdb\xf3\x0f\xef\xde\x7f\xec\x3c\xe1\xda\xcf\xdd\xcf\x67\xea\xfc\xc8\xd9\xdf\x1e\xac\x72\x95\x08\xab\x50\xfc\xdc\x99\x54\x38\xe0\x90\x12\xff\xb9\xd2\x63\xf8\x5b\xa7\x16\x5f\x04\x14\xe4\x01\x8e\x1b\xba\x01\xe5\x54\xdb\x08\xed\x0d\xf1\xf8\xec\x85\xb9\x0f\xa2\x12\x3b\xdd\xb0\x44\x58\x30\x29\xaa\x01\xd9\x22\x28\xd2\xdd\x40\x9f\x31\xc1\x97\x90\xa1\x95\xde\x84\xa4\xbd\x36\xf1\x90\x4b\xc2\x88\x76\x03\x56\x85\x4e\x5a\x7b\xd1\xdf\xb7\xf8\xa6\xfb\x44\x8f\x27\xb1\x5a\x4b\x1b\x47\x5f\xbd\x18\x68\x84\xe9\x52\x84\xe5\x2c\xe7\x07\x55\x85\xf1\x9a\x63\x48\x27\x4e\xef\xb1\x5c\xe3\x7a\xb1\x85\x78\x7f\x6c\x60\x2a\x20\x98\x81\x2c\xa4\x25\x44\x96\x60\x67\xc9\xa0\xab\xdd\x1f\x0e\x64\x20\xfc\xbf\x55\x7c\x7b\x24\xdb\x82\x61\x5c\xc2\x26\xd4\x64\x43\x2e\x2c\x76\xda\x84\x09\x46\x3b\x66\xd2\xd6\xf2\x00\x57\xca\xb4\xea\x87\xf3\x4a\xa3\x72\x0a\x06\xe3\xde\x9d\x0d\x7c\x99\xb1\xe7\xcd\x9c\x7b\x6a\xdc\x23\xc5\x54\x47\xd8\xdd\x54\xdb\xe7\xee\x92\x3c\x4c\x2f\xb4\x2d\xff\x57\x3e\x24\x5e\xf4\xf3\xbd\x9d\x3d\xcd\xfe\x05\x00\x00\xff\xff\x6a\x95\x3d\xd3\xf1\x02\x00\x00")

func tsconfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_tsconfigJson,
		"tsconfig.json",
	)
}

func tsconfigJson() (*asset, error) {
	bytes, err := tsconfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tsconfig.json", size: 753, mode: os.FileMode(420), modTime: time.Unix(1550802832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _publicFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x0d\x4c\x55\x65\x18\xc7\x1f\xe0\x1a\x04\x85\x18\x9a\x5d\x4b\xef\x69\xa6\x32\xe7\xdc\x2c\x95\x73\x67\x26\xae\x9a\xb9\xe4\x5c\xf5\x9e\x13\x73\xe8\x6e\xe9\x0c\xd4\xcc\x12\xb8\x88\x9a\x62\x69\xcd\xcd\x4f\x30\x44\xca\x89\xb9\x34\x5d\x4d\x14\x9c\x6b\x6a\xdd\x0b\x9b\x29\x61\x1a\xf3\x13\xf9\xf4\x8a\x22\x2e\x94\xe0\xf2\xe1\x85\xf7\xdf\xde\x73\x3f\x52\xee\x65\x92\x0b\x5b\xdb\xfd\x6f\xcf\x38\xcf\x39\xcf\xfb\xfc\xde\x8f\xe7\x39\x67\x5c\xa2\x00\x0a\x24\x41\xe0\x7f\x05\xfa\x2e\x82\x68\x38\x11\x45\x44\x70\x3f\x84\x12\xfb\x10\xfd\x16\x41\x14\x45\x44\x02\x11\xc5\x90\x33\xee\x61\x92\x25\x11\xdc\x58\x8d\xb9\x57\xcd\xcd\xf1\xf3\xfd\x7c\x3f\xdf\xcf\xf7\xf3\xff\x9f\xfc\x32\xeb\x7c\x9c\xcc\x9b\xad\x5a\xd5\xc9\xc4\xc7\xce\xbf\x51\x73\x06\x8e\x0e\xa8\x76\xad\xec\xf8\x63\xe3\xb7\x95\x27\xe1\x46\xc9\x22\x34\xde\xad\xf7\xf0\x6f\xd5\x5e\xc2\xf5\xe2\x85\xea\xb3\xde\xe4\x3b\x2a\x53\xb0\x3f\xe7\x5d\x6c\xcb\x5c\x89\x6d\xbb\x8e\x22\x67\xaf\x15\x5f\xed\x2b\x44\xe6\xd7\x79\xc8\xca\x5c\x8e\xbc\x5d\xa6\x5e\xe5\xb7\x95\xa7\xc1\xbc\xd1\x82\xe4\x0d\x45\x3e\x6d\xe5\xe6\xa3\xff\x2e\xff\xda\x0a\xb0\x86\x43\x40\xeb\x15\xa0\xdd\x06\xd8\xcf\x22\x77\xff\x11\x95\x65\x9c\xbb\x0e\xaf\xe8\xa7\x62\xdc\xab\xd3\x30\x6b\xe1\x16\xf5\x5e\x5e\xc1\x61\xe0\xcf\x22\xa0\xe9\x34\x58\xc3\x41\x30\xdb\xea\x47\xe7\x5f\x5f\x0b\xdc\xab\x43\x57\x31\x00\x25\xc5\x27\xa0\x13\x86\x7a\x6c\x44\xd4\x48\x54\x54\x5e\xf2\x8a\x45\x67\x33\x58\x5d\xf6\x23\xf1\xd1\x56\xe9\x9d\xef\x3e\xe5\x6e\x37\x63\xda\x94\xb1\x98\xf1\xf6\x38\xe4\xff\x90\xd3\x7d\x60\x67\x2b\xd8\xf5\x75\x3d\xe1\x37\xf1\xfb\x6d\xe5\xc9\x60\x75\x5f\x7a\xa5\x69\x69\x69\x81\xe9\xbd\x79\x88\x1a\x39\x1a\x2b\x3e\x59\x0d\xe6\xb8\x03\x56\x93\x0a\x76\x73\xab\x57\xec\xf9\xf3\x17\x10\x33\xf9\x0d\x8c\x79\x79\x3c\xf2\x0b\x8e\x00\x8d\x56\x57\xfd\x24\xbb\xf9\x4d\x3e\xf8\x65\xfc\xd9\xed\x73\x4b\xc0\x1a\xf2\xbd\x72\x6e\xcf\xce\x41\xbf\xc8\x81\x1e\xb3\x16\x16\x81\xd5\x7e\xee\xac\x8f\x2e\x9a\x3e\x43\xf6\xc4\xe9\x5e\x1c\x86\x0e\x7b\x85\xca\xaf\x3f\xb7\x44\xe5\x1b\x25\xf1\x4a\x57\xbe\x62\x88\x3e\xc8\x9f\x15\x1f\x99\x07\x76\xa7\xc0\x2b\x67\x56\x56\xf6\x03\x7c\x8b\xc5\x0a\x56\xfb\x85\x4f\xbe\x61\xba\xd1\x13\x37\x44\x78\x09\x8e\xe6\x72\x95\x7f\x3a\x7f\xae\x7b\xfd\x87\x1e\x5c\xbb\x5e\x89\x9b\xa9\x6f\xde\xb2\x46\xc2\xb5\xd3\x1f\x80\xd5\x6d\xf7\xca\x69\xb7\xdb\x11\x3f\xdb\x84\x61\xc3\x47\xc2\x9c\x9a\x06\xe6\x68\x74\xed\x7f\xa6\x57\xec\xef\xa5\xa5\x98\x30\x31\x06\xa3\x46\x8f\x41\x5e\x1e\xef\x89\x42\x95\x7f\xd9\x92\x88\x65\x8b\xdf\xe4\xfc\x36\xd9\xa0\x4f\x50\xd9\xd3\xf4\xaf\xc7\x4d\xd7\xb3\xd2\x63\xef\xe3\x8f\xd2\x8f\xd0\x51\x65\x46\x67\x35\xaf\xbf\x6a\x1f\xc5\xf4\xb7\xf8\x19\x79\x6a\x95\xf7\x67\x77\xea\x6c\x73\x9e\x93\x2b\xb6\xf5\x6a\x12\xbe\xd9\x2a\xab\xfb\xa0\x18\xc4\x38\x45\x12\x8f\x7d\x6a\x9e\x8a\xa6\xcb\x49\xd8\xb9\xd1\x88\x9d\x9b\x66\xa2\xa5\x2c\x09\x9d\x36\xde\x7f\xf5\xbe\x73\x36\xff\xea\x5c\xbb\xbb\xaf\x6c\x6b\x7c\xcf\xb7\xb3\x05\xec\x56\x0e\x58\xb5\x19\x17\x7f\x4a\x40\xf6\xfa\x19\x38\xb4\x6b\x16\xec\x57\x92\x9c\x7c\x49\x3c\x27\x1b\xc4\xea\x45\x73\x63\x70\xaf\x32\x19\xed\x15\x29\x9e\x73\xca\xf8\x4c\x82\xfd\x6a\x9a\xb3\x16\x5a\x2b\x80\xf6\x5a\xc0\x5e\x0a\x56\x9f\xdb\xcd\xbb\x2d\x15\xec\xf6\x1e\xa0\xe9\x17\xa0\xb9\xc4\xb9\x3f\xb6\x74\x95\xb5\x7b\xab\x8c\x5b\x67\x3f\x54\xd7\xce\xf7\xf8\x6a\xd1\x02\x77\x1d\xd8\x15\x29\xda\xca\xaf\x57\x2d\x9d\x82\xc3\xb9\xf1\xd8\xb0\x2a\xd6\xd3\xa3\x89\xa6\x49\xb0\x7c\x6f\x42\x3b\xef\xc9\x7f\xf8\x9d\xe7\xbd\xc6\xc7\x26\x98\x26\xa9\xb9\xe6\x28\x13\xb0\x27\x43\xc1\x81\x1d\x71\x98\x3f\xe7\x35\x67\x1f\xc4\x8a\x17\xf9\xf9\xcb\x92\xd8\xe1\x66\x7a\xcc\x20\xda\xdc\xd7\xa6\xb8\x09\xc8\x58\x6b\x40\xc1\xee\x78\x9c\x3f\x91\x80\x9b\x67\x16\xa3\xf1\xe2\xc7\xea\x9e\x71\xe3\xd7\xfc\x1e\x7f\xc6\x63\x78\x2c\x1f\xe3\x1e\xaf\x48\xfa\x72\xaf\xfc\x92\xc8\xf8\xf9\xab\x35\x68\x18\x3f\x51\x36\xe8\x7f\x94\x25\xb1\x52\x91\xc4\x62\x45\x12\x17\x10\x51\xa0\x31\x56\x3f\xcb\x28\x89\x55\x3e\xc6\xf6\xc8\x8c\x92\x58\x6e\x8c\x15\xdf\xe1\xff\x02\xcb\x92\x18\x2f\x4b\x62\x91\x2b\x9f\x45\x8e\x15\xa7\x76\x7d\x07\xf8\x92\xa2\x28\x41\x33\xa5\xe8\xc9\xb2\x41\xcc\x90\x0d\xe2\x71\x3e\x47\x59\x12\x1b\x5c\xe6\x66\x35\xba\x7c\x9b\x33\x26\x7a\x33\x5f\x53\x7a\x3a\x05\xf6\x84\xf1\x5f\xca\x42\x14\xd4\x5b\x96\x4e\x14\xe0\x8b\xc9\xef\x83\x48\x6d\xd1\x28\x22\x8a\x70\xfd\x56\x11\x40\x21\xdd\xce\xb3\x5f\xe4\x40\xd2\x09\x43\x69\xf4\xa8\x11\x14\x27\x8d\xe1\xdf\x0b\x4a\x99\x1f\x4d\xcb\x12\xc7\xd2\x8a\x24\x89\x0e\x64\xbc\x45\xdf\x66\xc8\x94\xbc\xa1\x88\x4e\xed\x93\x68\xd3\x8e\xbd\xb4\x77\xcf\x7a\x3a\x95\xbf\x94\x0a\x0f\x2f\xa7\xb3\xc7\xd2\xa8\xf8\xe7\xcd\x54\x62\xcd\xa2\xa6\x0b\xc9\x84\x8a\x54\x42\x15\xb7\x65\x84\x9a\x14\x42\x75\x1a\xb1\x1a\x33\xdd\xac\x29\x25\x7b\x8b\x83\x5a\xef\x81\x1c\x1d\x20\x07\x03\x9f\x68\x6f\x1e\x81\x5f\x7e\xf9\xf5\x10\x09\x1a\xed\x7d\xd2\x08\xbd\xe4\x47\xf4\xd5\x0e\xe8\xdf\xdf\xed\x3f\x17\x3a\x78\x70\xa8\xd6\xed\x0f\xd0\x6a\x9f\x0e\x0d\x7d\x4a\x3b\xf0\x59\xa7\x1f\xa9\xd3\x85\x07\x04\x84\xeb\x74\x91\x4e\x7f\xd0\x10\x0a\xd4\x6a\x07\x0d\xa6\x40\xad\x46\xd0\x3c\x11\x36\x48\xa7\xfa\x3a\x0a\x0c\xeb\xa3\xd1\x84\x85\x84\x3f\xff\x42\xb8\x56\x1b\xae\xd3\x85\x87\x84\x69\x04\x4d\x70\x48\x58\x18\x47\x3e\xd3\xef\xc9\x60\x8d\xc0\x15\x1c\x1c\xa4\xd1\x04\x05\x07\x0b\x3e\x94\x1e\x40\xd4\x53\x73\x8b\x5f\xdf\xed\xcb\x5f\xb4\x44\x7f\x05\x00\x00\xff\xff\xf7\x87\x31\xc7\x36\x16\x00\x00")

func publicFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_publicFaviconIco,
		"public/favicon.ico",
	)
}

func publicFaviconIco() (*asset, error) {
	bytes, err := publicFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "public/favicon.ico", size: 5686, mode: os.FileMode(420), modTime: time.Unix(1550849174, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _publicIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x95\xcd\x6e\xdb\x46\x10\xc7\xef\x79\x8a\x09\x8b\xdc\x44\xb2\xbd\x15\x05\x69\x20\x4d\x0b\x34\x85\x9b\x04\x89\x7d\xc8\xa9\x5a\xee\x0e\xc5\xa9\x97\x33\x8b\xdd\xa1\x04\x21\xc8\xbb\x17\xbb\xa4\x2d\xbb\x36\xaa\x8b\xf6\x6b\xfe\xf3\xf5\x1b\xa9\x7b\xfd\xdb\xc7\x77\x37\x5f\x3f\xfd\x0e\x93\xce\xfe\xea\x55\x97\xbf\xc0\x1b\x3e\xf4\x15\x72\x75\xf5\x0a\xa0\x9b\xd0\xb8\xbc\x00\xe8\x66\x54\x03\x76\x32\x31\xa1\xf6\xd5\xa2\x63\xfd\x73\x05\xed\x76\xe9\x89\xef\x20\xa2\xef\xab\x34\x49\x54\xbb\x28\x90\x15\xae\x60\x8a\x38\xf6\xd5\x9b\x4f\xb7\xbf\x5e\xbf\x7f\xf7\xf7\xed\xe7\xeb\x37\xed\x68\x8e\xf9\xae\x21\x2b\x17\x81\xac\x5e\x56\x00\x6c\x66\xec\xab\x23\xe1\x29\x48\xd4\x6a\x3b\xb5\xc2\x8a\xac\x7d\x75\x22\xa7\x53\xef\xf0\x48\x16\xeb\xb2\xd9\x01\x31\x29\x19\x5f\x27\x6b\x3c\xf6\x3f\xed\x20\x4d\x91\xf8\xae\x56\xa9\x47\xd2\x9e\x65\x55\x79\xec\x6c\x73\xa3\x13\xce\x58\x5b\xf1\x12\xab\x8b\x8f\x1f\x7e\x2c\x9f\x4b\x78\xaf\xeb\x7a\x8b\x63\x36\x4c\x23\x26\x6d\xfe\x49\xc2\x10\xa2\x1c\xc9\x61\x82\x2c\xe9\x8c\x1a\x58\x12\x3a\x38\x4d\xc8\x70\x96\x25\xc2\x09\x07\x30\x21\x00\x25\x30\xce\xa1\x03\x15\xd0\x09\x37\xb1\x49\x66\x4c\x36\x22\x32\x08\xc3\x5b\x76\x51\xc8\x35\xf0\x05\x11\x26\xd5\x90\x7e\x69\x5b\x87\x47\xf4\x12\x30\xa6\xe6\x20\x72\xf0\xd8\x58\x99\xdb\x13\x0e\xed\xb8\xb0\x33\x33\xb2\x1a\x9f\xf2\x41\x6d\x42\xa8\xef\xc3\x6b\x8b\x87\xba\x7e\xd6\x9f\xfb\x07\x2f\xb6\xe6\x49\x72\x2f\x65\xff\x41\x94\x2c\xe6\x0c\x72\xa2\x20\x23\x3c\xb6\x07\xe2\x72\xa5\xe6\x90\xc0\x0c\x72\xc4\x66\xb3\x7b\xaf\x70\x22\xef\x61\x40\x88\x18\xbc\xb1\xb9\x48\xa4\x53\x79\x7e\xfb\xf9\x3a\x2b\xe5\xe5\x3e\x2c\x83\x27\xbb\x87\x51\xbc\xc3\x08\x6e\x89\xc4\x87\x72\x35\x2c\xe4\xdd\xbd\xde\x47\xf6\x67\x18\xc9\x63\x02\xe2\x44\x0e\x5f\xb4\xb6\x86\x57\x8f\x23\x46\xe4\xec\x73\x8c\x32\x97\xa7\x7f\xdc\xfc\x75\xdd\xbc\xda\xd4\x6e\xd9\xd3\x1d\x42\xf5\x14\x4d\x89\x50\x3d\x3e\xd8\xc1\xff\x70\x9c\xb3\xdb\xd4\x4e\x12\xef\xc0\x4a\x8c\x68\xd5\x9f\x61\x10\x9d\xd6\x5c\xad\x27\x64\xad\x4b\xb8\x51\x16\xcd\x99\x19\x76\x60\x80\x85\xeb\x28\xa2\xb0\x26\x90\x2b\x72\x9f\xe9\x35\x9a\xc8\x30\xc9\x29\x93\x63\x85\x47\x3a\x2c\x11\x5f\xb6\x81\xe1\x0c\x71\x61\xce\xc2\x7b\x0e\x73\xde\xac\x75\xdb\x37\x4f\x79\x50\x52\x8f\x57\xdf\xbe\x35\x6f\x43\xf8\x60\x66\xfc\xfe\xbd\x6b\xd7\xb3\x3c\xf5\xed\xfd\xd8\x77\x83\xb8\xf3\x66\xc2\x92\x6c\xa4\xa0\x57\x5f\x65\x01\xc6\x15\x65\x64\x33\x78\x84\x3f\xcd\xd1\x7c\x29\xb7\xf9\x30\x7b\xd5\x29\x13\x1f\x42\xd3\xb5\x0f\x86\xab\x8e\xa3\x23\x90\xeb\xab\x1c\x7b\x75\xd5\xb5\x8e\x8e\xcf\x30\xbb\xc9\xd6\xb9\x45\xa5\xc7\x65\x78\x40\x71\x0e\xde\xe8\x05\xa9\x31\x4f\x18\x48\x40\x06\x52\x70\xb4\xd5\x7b\x63\x70\x88\x72\x4a\x18\x77\xe5\x51\x61\x2f\x21\x82\x61\xc0\x39\xe8\x19\x82\x39\xe0\x43\xff\x73\x46\x99\x15\xe3\x5c\x1e\xd8\x51\x58\xd3\xae\x8c\x74\x41\x79\x97\x51\x30\x6c\xfc\x59\xc9\xa6\x75\x82\x29\x95\xd0\x9a\x87\x80\x37\x40\x21\x29\x86\xd5\x5f\xc1\x7c\x43\x97\x9d\x47\x07\x6b\x1d\x32\xb2\xeb\xaf\xc0\x56\xdf\xec\xe4\x21\x96\x1b\x81\x01\x0f\x5b\x12\xdb\xf0\xe7\x21\xdf\x95\xb2\x96\xae\x26\x35\x51\xf7\x39\xa8\xfd\x39\xc3\xb1\xee\x9b\x8b\x80\x8d\x68\x34\x33\x12\xa2\xb8\xc5\x2a\x09\x6f\x31\xec\xca\xd8\xfe\x87\x8d\x8b\xd2\x73\x56\xba\x76\x45\xa0\x6b\xd7\x3f\x89\x7f\x03\x00\x00\xff\xff\xd3\x81\x7c\xb8\x35\x06\x00\x00")

func publicIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_publicIndexHtml,
		"public/index.html",
	)
}

func publicIndexHtml() (*asset, error) {
	bytes, err := publicIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "public/index.html", size: 1589, mode: os.FileMode(493), modTime: time.Unix(1550848996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _publicManifestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x3d\x4e\x03\x31\x10\x85\x7b\x9f\xe2\xc9\xb4\x10\xc8\x66\xb5\x45\x3a\xc4\x0d\xa0\x44\x68\x35\x78\x27\x89\x85\xd7\xb6\x6c\x07\x39\x44\xb9\x3b\x1a\x2f\x3f\x99\x62\x8a\xf9\xbe\x79\x7a\x67\x05\xe8\x7c\x08\xa9\x8c\x9e\x66\xd6\x5b\xe8\x67\x26\x53\xf0\x18\xa3\xbe\x15\xf8\x7b\x7e\x4a\x4c\x85\xf1\x47\xf1\x42\x73\x74\xbc\x48\xd6\x04\x9f\xf5\x16\xaf\x0a\x00\xce\x6d\x4b\x70\x32\xf2\xba\xa3\x4f\x11\x56\xd6\x84\xa6\x2f\xcc\x7e\xb1\xbc\xe8\xa1\xaf\x43\x8f\x4d\x57\x37\x1d\xba\xbe\x76\x3d\xd6\x43\x5d\x0f\xff\x66\x39\xc5\xd6\xc0\xce\xb4\xe7\xfb\x7a\x27\x59\xba\xc1\x8b\x02\xde\x5a\x81\x5c\x28\x95\xf1\x98\x9c\x88\xab\xa5\xd4\x64\x73\x74\x74\x92\x4b\x2e\xe4\x27\x72\xc1\xff\xf4\x2d\x07\x9e\x79\x34\xc1\x85\x24\xf8\xe6\xa1\xcd\xc2\xde\xc9\x7c\xec\x53\x38\xfa\xe9\x4a\xd8\xb5\xd1\xea\xa2\xbe\x03\x00\x00\xff\xff\x95\x6e\x9c\x80\x32\x01\x00\x00")

func publicManifestJsonBytes() ([]byte, error) {
	return bindataRead(
		_publicManifestJson,
		"public/manifest.json",
	)
}

func publicManifestJson() (*asset, error) {
	bytes, err := publicManifestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "public/manifest.json", size: 306, mode: os.FileMode(493), modTime: time.Unix(1550809833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverAppGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6f\xd4\x30\x10\x85\xcf\xf6\xaf\x18\x59\x7b\x70\xd0\x92\x1c\x7a\xa2\x68\x0f\xdb\x65\x4b\x11\xa5\xad\xda\x22\x0e\x80\x2a\xaf\x33\x9b\x58\x4d\xec\x68\x3c\xee\xb6\x4a\xf3\xdf\x51\xb2\x5a\xa0\x20\xb8\x45\xdf\x7b\x99\xf1\x7b\x76\x67\xec\xbd\xa9\x10\x5a\xe3\xbc\x94\xae\xed\x02\x31\x68\x29\x94\x47\x2e\x6a\xe6\x4e\x49\x29\x54\xdf\xe7\x37\x48\x0f\x48\xcb\xab\x0f\x57\x86\xeb\x61\x50\x52\xa8\xca\x71\x9d\x36\xb9\x0d\x6d\xd1\x98\x4d\x64\x63\xef\x0b\xb4\x75\xf8\x9f\x56\xb4\xae\x2c\x1b\xdc\x19\x42\x25\x33\x29\xb7\xc9\x5b\xb8\xc0\xdd\xb2\xeb\x74\x06\xaf\x46\x4b\xbe\xb6\x75\x80\x5e\x0a\xf4\x95\xf3\x08\xc7\x0b\x98\xf0\x05\xee\x74\x76\xa0\xf9\x3b\xdc\xa4\x0a\x16\xc0\x94\xf0\x27\xfc\x1c\x51\xff\x5a\x90\x5f\xa3\x0d\x0f\x48\x3a\xcb\xfe\xe5\x38\x0f\x55\x85\xf4\xc5\x71\xbd\x0a\x7e\xeb\xaa\xbf\xb5\x3d\xef\xa5\x10\xa7\x81\x5a\xc3\xc7\xa0\xbe\xae\x57\x67\x97\xdf\xe1\x35\xcc\x7a\x76\x2d\xde\xd1\xd6\x1e\x1d\x1d\xbd\x19\xe0\x79\xd6\x47\x36\x9c\xe2\xf0\x0c\xb3\xbe\x31\x8c\xde\x3e\xdd\xd5\xa9\x35\x7e\x80\x11\xd5\x21\xf2\xfe\xab\x45\xae\x43\x39\xc0\xac\x4f\xe4\x86\x6f\x5e\xcd\xa5\x18\xb2\x4c\xbe\x38\xa8\x0d\x14\x7f\x43\xef\xd7\xb7\x5a\x15\x6a\x0e\x63\x69\xda\xee\x5b\x59\x05\xcf\xf8\xc8\x19\x20\x51\xa0\xb1\x36\xe1\xb6\x50\x1a\x36\xf3\x11\x8d\xed\x2d\x63\x44\xd6\x2a\x4e\x37\x58\x8c\x52\xb1\x49\xae\x29\x0b\xe7\x4b\x7c\xcc\x6b\x6e\x1b\x95\xbd\x9d\xdc\x8b\x05\x78\xd7\x4c\x53\x04\x21\x27\xf2\x60\xf3\xb3\xdb\x4f\xe7\x27\x4d\xd8\xe8\xf1\x3d\xe4\x37\x53\xc2\xcb\x8f\xf3\x69\x49\x26\x85\x18\x00\x9b\x88\x2f\x7e\x42\xa2\x51\x18\x33\x49\x29\x4c\xe7\xf2\xeb\x90\x18\xa3\x3e\x44\xa1\x90\x3a\xad\x0a\xd3\x39\xf5\x67\xea\x88\xbe\x3c\x71\xde\xd0\xd3\xa9\x6b\x70\x2a\xe0\x30\x75\x32\xc9\x41\xfe\x08\x00\x00\xff\xff\x33\x92\x13\x22\xb6\x02\x00\x00")

func serverAppGoBytes() ([]byte, error) {
	return bindataRead(
		_serverAppGo,
		"server/app.go",
	)
}

func serverAppGo() (*asset, error) {
	bytes, err := serverAppGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/app.go", size: 694, mode: os.FileMode(420), modTime: time.Unix(1550811654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverDbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6a\xeb\x40\x10\x45\xeb\x9d\xaf\xb8\xa8\x92\xe0\x61\xf5\x0f\x52\x19\x42\xca\x40\xbe\x60\x76\x76\x2c\x2d\xb6\x66\xcc\x6a\x94\x38\x04\xff\x7b\x10\x26\x4d\xd2\x5e\x38\xe7\x9e\x2b\xcb\x99\x27\xc5\xc2\xd5\x88\xea\x72\xf5\x16\xe8\x29\x75\x53\x8d\x79\xcb\x07\xf1\x65\xbc\x70\x5e\x83\xe5\x3c\xaa\xcc\xde\xd1\x40\x34\x8e\x78\x6d\xfe\x5e\x8b\x1e\xdd\x4c\x25\xaa\x1b\x38\x82\x65\xd6\x15\x8c\xc9\xdb\x82\x92\x11\x8e\x98\x15\x53\x35\x88\x5b\xe8\x2d\xe8\xb4\x99\xe0\xfa\x1b\xee\x4d\x6f\x81\xdd\x7f\x78\x61\x2b\x17\x6d\xcf\x9b\xc9\xf0\x67\xc1\x17\xa5\x71\x44\xd1\x53\x35\xc5\xa7\x6f\x0d\xfe\x61\x28\x1c\x9c\x79\x55\xcc\xda\x94\x52\xc9\xf8\xff\x84\xae\xa3\xd4\x34\xb6\x66\xd8\x4f\x7b\x79\xd8\x8e\x8f\x90\x01\xda\x9a\xb7\x5d\x98\xe4\xf0\xa6\xd1\x77\x25\x77\xff\x50\xf2\x40\xe9\x87\xdb\xab\x7a\x19\x28\xdd\xe9\x4e\xdf\x01\x00\x00\xff\xff\xa7\x1a\xc6\xb6\x2b\x01\x00\x00")

func serverDbGoBytes() ([]byte, error) {
	return bindataRead(
		_serverDbGo,
		"server/db.go",
	)
}

func serverDbGo() (*asset, error) {
	bytes, err := serverDbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/db.go", size: 299, mode: os.FileMode(420), modTime: time.Unix(1550815452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\xe2\x4a\x2b\xcd\x4b\x06\x33\x35\x34\x15\xaa\xb9\x38\x83\x4a\xf3\x82\x53\x8b\xca\x52\x8b\x34\x34\xb9\x6a\xa1\xb2\x48\x62\x20\x25\x89\x05\x05\x0a\x56\xb6\x0a\x7e\xa9\xe5\x8e\x05\x05\x1a\x9a\x60\x01\xbd\xe0\x92\xc4\xa2\x12\x0d\x25\x2b\x63\x03\x03\x43\x25\x90\x56\x40\x00\x00\x00\xff\xff\xa0\xf5\x61\xe1\x66\x00\x00\x00")

func serverMainGoBytes() ([]byte, error) {
	return bindataRead(
		_serverMainGo,
		"server/main.go",
	)
}

func serverMainGo() (*asset, error) {
	bytes, err := serverMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/main.go", size: 102, mode: os.FileMode(420), modTime: time.Unix(1550848832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xc1\x72\xdb\x36\x10\x86\xcf\xe2\x53\x6c\x71\xc8\x90\x09\x45\xce\xe4\xe8\x8e\x0e\x8e\x22\xd7\x49\x1d\x4b\x63\xd1\xd3\x5e\x61\x70\x25\xc2\x82\x00\x16\x58\xda\x72\x3b\x7a\xf7\x0e\x40\xd2\x91\x62\xa6\xb1\x3d\xcd\xc5\x16\x89\xfd\x3f\xfc\x0b\xee\x2e\x6a\x2e\x36\x7c\x8d\xb0\xe5\x52\x47\x91\xdc\xd6\xc6\x12\xc4\xd1\x88\x69\xa4\xbc\x22\xaa\x59\xf7\xbb\xb1\xca\xff\xac\x39\x55\x2c\x8a\x46\x6c\x2d\xa9\x6a\x6e\x32\x61\xb6\xb9\xe2\x37\x8e\xb8\xd8\xe4\x28\x2a\xc3\xa2\x24\x8a\x56\x8d\x16\x20\x8c\x75\xb1\xc6\x1d\x81\x7f\x9f\x9d\x73\x5d\x2a\xb4\x67\x8d\x16\xc9\x93\x37\xf0\x4f\x34\xb2\x48\x8d\xd5\xe0\xb5\xb1\x68\x23\xa6\x46\x13\xee\x28\x01\xb4\xd6\x58\x1f\x34\x12\xd9\x15\xba\xda\x68\x87\x71\x92\x9d\x23\x2f\xd1\xc6\x49\xb6\x44\x8a\xd9\xa9\x10\xe8\xdc\xd8\x8b\xac\x51\xe3\x53\xa5\xcc\xfd\x78\x6e\xe5\x5a\x6a\x96\x02\x7b\xcb\x92\x57\xe8\xa7\x16\x4b\xd4\x24\xb9\x72\x1e\x42\xb6\xc1\x57\x71\xda\x90\xc0\x08\x59\x69\x1a\x17\x0f\x35\xa6\xd0\x3f\x5d\xa0\x5e\x53\x95\x82\x57\xd7\x34\x9e\x69\x61\x4a\xa9\xd7\x29\xfc\x39\x9e\x2e\xaf\xce\xc6\x85\xd9\xa0\x4e\xe1\xb4\xa1\xca\x58\xf9\x37\x27\x69\x74\x0a\x3c\x44\xa7\x60\x42\x9a\x29\x4c\xb9\xa8\xb0\xdf\xda\x6b\xaf\xf0\xaf\x06\x1d\x61\x39\xfe\x43\x7a\x7c\x87\xe9\xcd\x07\x13\xaf\x4a\xe8\x0b\x52\x65\xca\x90\xd0\x62\xbe\x2c\x52\x98\x2f\x8a\x4f\xf3\xcb\x65\x0a\xbf\xcd\x8a\x14\x16\xd7\xfe\xcf\x69\x31\x3d\x4f\xe1\xe3\xec\x62\x56\xcc\x5e\xb8\xcb\x6c\x57\x1b\x87\x43\xe7\xf6\x51\xba\xda\x38\xe9\x0f\x20\x30\xe5\x0a\x3c\x36\xe4\x19\x27\x59\x6b\x0c\x26\x13\x60\x9d\x25\x16\x2a\xa7\x2f\x30\x91\x5d\x9a\x0e\x15\xfb\x0a\xcf\x96\xc4\xa9\x71\xf3\xdf\x3d\x6b\x1f\x3d\xc6\xf9\xd2\x8d\x45\x12\x8d\xf6\xd1\xbe\x2b\x69\xde\x50\xe5\x8b\x41\x70\xc2\x7e\xc3\xef\x96\x6a\x8f\x91\xea\x48\xff\xff\xb7\x84\x5c\xf9\x07\x38\x99\x0c\xfb\x4b\x7e\x0d\xcb\xbf\x4c\xbc\x95\x6f\x4e\xe2\xf3\x72\x7e\x79\x78\x08\xd7\x9a\x77\xf5\x85\x65\x0a\xac\xd1\xbc\x7f\x62\x3f\x3e\x1d\x87\xba\xfc\x20\x35\xb7\x0f\x67\x52\xe1\x4f\xe8\xfd\x2e\xcb\xc7\xad\xfb\xcc\x0f\x53\xf3\xc9\xcc\xac\x4d\xc1\x6c\x7c\x2c\x5a\x9b\xc5\x6f\xdb\x2d\x8b\x62\x31\xf3\x2c\xaf\xf4\x52\xb3\x81\x37\x6f\xa0\x13\x64\x53\x53\xa2\x2f\x9a\x83\xd3\xb8\x34\x74\x66\x1a\x5d\xb6\xe4\xd1\x1d\xb7\xd0\x58\xb5\xe0\x54\x81\x23\x2b\xf5\x3a\x0a\xef\xdb\xd5\x51\x93\xf6\x9f\xa1\xb1\x2a\x5b\x70\xeb\x30\x3e\xac\xcb\xeb\xab\x8b\xcc\x6b\x93\x36\x7c\xc0\xfb\xd7\x2f\x83\xd6\xb6\x2f\xf6\x1d\x3b\x28\x61\x02\x7e\xfe\x66\x9f\x8d\xd4\x31\x73\x68\xef\xd0\xfa\xc6\x28\x39\x71\xff\xff\xa6\x91\xaa\x64\x29\x34\x87\xfb\xf4\x8e\x27\xd0\x64\xcb\xe0\x3a\x6e\x57\xf6\xad\x7b\xb9\x02\xaf\x7f\x34\x7f\xea\x1c\x52\xdc\xa9\xba\xda\x99\x1c\x99\x74\xf7\x92\x44\xd5\x5a\x99\xed\xbe\xc6\xf6\xeb\x82\x3b\x04\x96\x55\xb4\x55\xec\xe4\x38\x2f\x91\x9d\x17\x5f\x2e\x3e\x28\x73\x73\xdc\x7a\x69\xf0\x90\x1c\xe9\x85\x73\x4f\xe5\x43\x52\xe6\xeb\x24\xf7\xe1\x43\x98\xdb\x17\x51\x6e\xf9\x1d\x77\xc2\xca\x9a\x06\x61\xee\x6e\xfd\x4c\x9a\xdc\xf2\x35\xe6\xee\x6e\xfd\x6e\xb7\x55\x83\x2c\x29\xcc\x8b\x58\x3e\x7e\x88\xb3\xe5\xb5\xff\xf8\xb7\xce\xe8\x67\xf2\x78\x5d\x2b\x3f\x23\xa4\xd1\x79\x90\x0d\x61\xef\xcd\x6a\xf5\x4c\xde\xca\x68\xca\x43\xfc\xf7\x40\xef\x5f\x4a\x7a\x3f\x84\xa2\x67\x3b\x3a\xcc\xd0\x08\x42\x1a\x3b\xb2\xc8\xb7\xc7\xd4\x12\x57\xbc\x51\xf4\x04\xf9\xed\x54\xfc\xa4\x09\xad\xe6\x6a\x19\x3a\x2e\xcc\x90\x30\x1c\x37\xda\xdc\x6b\x10\xed\x5d\x02\xf4\x50\xe3\x09\xb0\x77\x4f\xfa\x22\x39\x6c\xe5\xff\xec\xba\xae\xa7\x73\xbf\x94\x87\x6e\xce\xa5\x2e\x71\xd7\xf6\xd2\xc0\x20\x7f\xb1\xe9\x15\x97\x0a\x4b\x20\x03\xca\xf8\x5b\x02\x6e\xc2\xc0\x66\xdd\x48\x00\x54\x0e\x9f\xa0\x7f\xdc\xb3\x21\xb7\xfd\xf1\x0d\x11\x66\x98\xbf\x1d\xfe\x0d\x00\x00\xff\xff\x8d\x29\xd9\x1f\x64\x0a\x00\x00")

func serverMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		_serverMiddlewareGo,
		"server/middleware.go",
	)
}

func serverMiddlewareGo() (*asset, error) {
	bytes, err := serverMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/middleware.go", size: 2660, mode: os.FileMode(420), modTime: time.Unix(1550806443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverApiRoutesGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc8\x31\x0e\x02\x20\x0c\x00\xc0\xbd\xaf\x68\x98\xd4\x01\x9e\xe1\xee\x0f\x4a\x53\x81\x20\xb6\x81\x76\x32\xfe\xdd\xb8\x9e\x11\x4f\x6a\x82\x64\x03\x60\x2c\xd3\xed\x98\xda\xf0\x1e\x35\xb3\xae\xf2\xa2\x7a\x9c\x78\x16\xe1\xae\x09\xe0\x19\x6f\xc6\x87\x86\xcb\xb9\x08\xde\xfe\x9a\xef\x5b\xc3\xae\xf8\x81\x2f\xfc\x02\x00\x00\xff\xff\x04\x02\x9f\xe2\x4f\x00\x00\x00")

func serverApiRoutesGoBytes() ([]byte, error) {
	return bindataRead(
		_serverApiRoutesGo,
		"server/api/routes.go",
	)
}

func serverApiRoutesGo() (*asset, error) {
	bytes, err := serverApiRoutesGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/api/routes.go", size: 79, mode: os.FileMode(420), modTime: time.Unix(1550806256, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x4f\xc3\x30\x0c\x85\xef\xfd\x15\x96\xb8\x0c\xa1\xa0\xae\x9b\x26\xd4\x5d\xe0\xa7\x64\xa9\xd3\x9a\x25\x76\x95\x78\x63\x03\xed\xbf\xa3\x04\xa6\x4d\x48\x9c\x5a\xf9\x7d\x79\x79\xcf\x79\x7e\x9b\x67\xf8\x6a\x00\x14\x4f\x6a\x6c\xa0\x91\x7b\x70\xc8\x8a\x69\xdb\x5c\x9a\xa6\xe8\x26\xc8\x28\x15\xb2\x4c\xd1\x2a\x09\xf7\x70\x9d\x9b\x3c\x13\x03\xb1\x27\x26\x45\xe8\xda\x0c\x81\x18\x6d\xda\x36\x00\x13\xd2\x38\x69\x0f\xeb\xf6\x18\x89\x6f\x86\x13\xda\x01\x53\xb5\xdc\x59\xb7\x1f\x93\x1c\x78\x30\x4e\x82\xa4\x1e\x1e\xba\x97\xce\xad\xd6\xe5\x7c\x24\x36\x57\x8f\x65\xdb\x1e\xa7\x32\x1c\x28\xcf\xc1\x9e\x7b\xf0\x01\x4f\x65\x50\xbe\x66\xa0\x84\xee\x27\x9a\x93\x70\x88\x5c\x94\xda\xc7\x90\x62\xcc\xb7\x56\x00\xef\x87\xac\xe4\xcf\xc6\x09\x2b\xb2\xde\x4b\x5e\x58\x4d\xa6\x4f\xec\xc1\xd9\xe0\x16\xcb\x76\x3e\xc1\x13\x74\x25\xff\x63\x01\x7e\x43\x7e\x4c\xa4\x78\xb7\x21\xe2\x7d\xad\x73\xed\xb0\x59\x0e\xd6\xef\x2a\xf0\xba\xc7\xb3\x4f\x36\x62\xfe\xb3\xb4\xc2\xfb\x24\xb1\xfe\x00\x68\xb2\x9c\xbd\xa4\xd8\x43\x12\xb5\x8a\x8b\x76\xc0\xb1\x5e\x7a\x29\x0f\x24\xff\x72\xab\xcd\x1d\x79\x69\xbe\x03\x00\x00\xff\xff\x05\x85\x25\xe5\xd4\x01\x00\x00")

func srcAppCssBytes() ([]byte, error) {
	return bindataRead(
		_srcAppCss,
		"src/App.css",
	)
}

func srcAppCss() (*asset, error) {
	bytes, err := srcAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/App.css", size: 468, mode: os.FileMode(493), modTime: time.Unix(1550808959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcAppTestTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\xdd\xec\x40\x96\x3c\x80\x97\x40\xd8\x76\xdc\x06\x7b\x83\x60\x6b\x8b\x61\x96\x8c\x23\xa7\x87\xd2\x77\x2f\x26\xa5\x4d\x6f\x12\xdf\x27\xfd\x7f\x88\x89\xb3\xc0\x0f\xce\x4e\xe0\x37\x73\x04\x9d\xeb\xac\xad\x3a\xa2\xf7\xef\xcf\x23\x7d\xf1\x1c\x1f\xc6\x94\xd2\x0d\x76\xfd\x94\x92\xb6\x4a\x05\x31\x3a\x23\x79\xcc\x2b\x9c\x82\x2c\x5c\x04\x5c\x9e\xd7\x25\xd0\x9f\x6e\xc1\x34\x30\x8c\x70\x56\x00\x8e\x69\x15\xf0\x61\x83\x01\x3c\xbb\x12\x91\xa4\x73\x19\x67\xc1\x8f\x7f\xac\x9b\xd1\x3e\x6c\xba\xb1\x0a\xee\x55\xba\xfd\xb5\x79\xad\xc9\xfd\xd8\xd6\xfb\x67\xa1\x50\xe4\x42\xf2\xc6\x31\x31\x21\xc9\x24\x5f\xec\xd1\xec\xde\xa5\xb1\xea\x1a\x00\x00\xff\xff\x89\x62\x6e\xb8\xf8\x00\x00\x00")

func srcAppTestTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcAppTestTsx,
		"src/App.test.tsx",
	)
}

func srcAppTestTsx() (*asset, error) {
	bytes, err := srcAppTestTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/App.test.tsx", size: 248, mode: os.FileMode(493), modTime: time.Unix(1550808959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcAppTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6e\xc2\x30\x10\xbc\xe7\x15\x2b\x2e\x40\x05\xf1\x07\x02\x12\xa2\xc7\x1e\x2a\xca\x07\xb6\xb1\x21\x96\x88\x6d\xd9\x9b\x00\x8a\xf2\xf7\x2a\x4e\x62\x0c\xa9\xaa\xde\xd6\xb3\xb3\x3b\xc3\x2c\x91\xa5\xd1\x96\xe0\x0d\xd0\xc1\x41\x60\x4e\x70\xb2\xba\x84\xb9\xed\xea\x79\x32\xb4\xe7\x29\xdb\x19\x93\xe6\xce\x05\xa8\x81\x83\xae\x48\xac\xe0\xeb\x2a\x29\x2f\x56\x70\x95\x54\x78\xc8\x42\x1b\x2f\x59\x5b\x0f\xae\xb9\x2e\xa3\xe1\xa3\x46\x47\x7b\xad\x08\xa5\x9a\x4c\x50\xd7\x94\xa7\xfb\x43\xff\x19\x67\x5c\x3a\x62\xde\xee\x71\x80\x7a\x6f\x23\xff\xd3\xca\x1a\x49\x78\x3b\xc3\xe6\x94\xe5\xba\x34\x5a\x09\x45\x8e\x29\xac\xe5\x19\x49\x6a\xc5\x4c\x44\x4d\x03\x25\x28\x7f\xe8\xb3\x54\x61\x45\x2d\xc5\xd5\xb1\x4b\x87\xa5\x5d\x1d\x68\xef\xe8\x8a\x6f\x8d\x96\xbf\x50\xf9\x88\x0f\xf4\x24\xbf\xa0\x73\xb0\x33\x06\xc4\x8d\x84\xe2\x43\xea\xe9\x7e\x54\xce\x50\xdd\x57\x80\xea\xbe\x85\x26\x01\xb0\x42\x71\x61\x17\x4b\xff\xe8\x9e\x54\x59\x05\x0b\xff\x00\xc8\xb8\xac\xb7\x43\x0d\x90\xbd\x84\xca\x1e\xad\x26\x54\x00\x59\x7f\xb1\x6d\x04\x01\x64\x7d\x56\x06\xa9\xd8\xcc\xfa\x5f\x38\x83\x10\xc7\xa6\xf1\x39\xb4\xf1\xca\x68\x4a\xdc\x30\xa7\x4d\x43\xb6\x12\xed\xb8\xe2\x3f\xd3\x4f\xee\xff\x30\xe7\x1b\x4f\x37\x1d\x44\x42\xbc\xb3\xde\x43\xac\x19\x4e\x32\xd1\x05\xc8\xd8\xaf\x19\xb0\x17\x43\x53\x5a\x9b\x4c\xa8\xcb\xa4\x83\xdb\x44\xdc\xfc\x3f\x81\x8b\x13\x56\x17\x8a\x3e\x87\xc5\xce\x98\x65\xf2\x13\x00\x00\xff\xff\x79\x53\x06\x8c\x69\x03\x00\x00")

func srcAppTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcAppTsx,
		"src/App.tsx",
	)
}

func srcAppTsx() (*asset, error) {
	bytes, err := srcAppTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/App.tsx", size: 873, mode: os.FileMode(493), modTime: time.Unix(1550809156, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcIndexCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6b\xc3\x30\x0c\x85\xef\xf9\x15\xba\xe5\x12\xc3\xce\xed\x6d\x1d\x65\x3b\xb4\x83\x95\xfe\x00\xc5\x51\x33\x51\x5b\x0a\x96\xb3\x36\x1b\xfb\xef\xc3\x26\x0c\xc6\x4e\xf6\x67\x3f\xa4\xf7\x5e\xaf\xc3\x02\x5f\x0d\x40\xc4\x34\xb2\x6c\xe0\x61\xdb\x00\x4c\x38\x0c\x2c\xe3\x4a\x17\x95\xec\x2e\x18\x39\x2c\x1b\x70\x38\x4d\x81\x9c\x2d\x96\x29\x76\xf0\x18\x58\xae\x07\xf4\xa7\xca\x7b\x95\xdc\x41\x7b\xa2\x51\x09\xce\x2f\x6d\x07\xed\x9b\xf6\x9a\xb5\xdc\x5e\xef\xcb\x48\xd2\x76\x0d\x00\x40\x7b\xee\x67\xc9\x73\x79\xdf\xa1\x64\x4c\x14\x42\x81\x3d\x27\x84\x13\x8a\x15\x78\x4a\xca\xc3\x2f\x3d\x53\xf8\xa0\xcc\x1e\xe1\x48\x33\xad\x73\x0c\xc5\x9c\x51\xe2\x4b\x71\xea\x6e\xd4\x5f\x39\xbb\xea\xd8\xa2\x6a\x7e\xaf\x31\x50\x32\x63\x60\x34\x1a\xaa\x2c\xea\xa7\x53\xbb\xff\xd3\x8d\x09\x17\xf3\x18\x68\xdb\x7c\x37\x8d\xd7\x81\x6a\x37\x7f\x0a\x30\x9d\x93\x27\x57\x3e\xdd\x94\xb4\x83\x03\x49\x28\x87\x0a\x7a\xed\x60\xa7\x62\x1a\xd0\x4a\x32\x9d\x13\x53\x82\x23\xdd\x56\xbb\x51\x45\x6d\x42\x5f\x17\xfc\x04\x00\x00\xff\xff\x2d\x4f\xc1\x5a\x7c\x01\x00\x00")

func srcIndexCssBytes() ([]byte, error) {
	return bindataRead(
		_srcIndexCss,
		"src/index.css",
	)
}

func srcIndexCss() (*asset, error) {
	bytes, err := srcIndexCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/index.css", size: 380, mode: os.FileMode(493), modTime: time.Unix(1550808960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcIndexTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x4f\x6f\xe2\x3e\x10\xbd\xe7\x53\xcc\x2d\xf0\x13\x8d\xef\xe5\x8f\x44\xfb\x5b\xad\x2a\x6d\x77\x2b\x2e\x3d\x9b\x78\x02\x56\x13\x8f\x35\x9e\x14\x22\xc4\x77\x5f\xd9\x04\x48\xb4\x5d\x2d\x17\xc6\xf3\xde\xbc\xbc\x79\x89\x6d\xe3\x89\x05\xfe\x03\x1d\x60\x83\xba\x14\xa8\x98\x1a\xc8\x39\xd6\x79\xd6\xc3\x09\xf9\xff\xd7\xeb\x10\x7c\x30\xd4\xe4\xf3\x2b\xe3\x04\x4f\x4c\x87\x80\xbc\xa1\x56\x90\xe1\x3c\xa2\x72\x6a\xa6\x89\xeb\x40\x5e\x28\xeb\x0c\x1e\x8b\x32\x84\xbb\xcc\xda\xfb\x7e\xb0\x50\x6b\xef\xef\x40\x32\x18\x90\x3f\x6d\x89\xef\xc4\x1f\xc8\x37\xde\xa8\x3b\x74\x14\x84\x18\x67\xe0\x91\x83\x8d\xf5\xcd\x54\xa1\x12\x94\xdf\xa9\x6f\x4c\x9f\xd6\xfc\xe9\x1b\x4d\x7b\x1c\xd2\x2e\x52\xdf\xb5\xe0\x80\x69\xda\xe3\x43\xff\x10\x65\x9d\xe0\x8e\xb5\x58\x72\xea\x92\xe1\x3c\xcb\xca\x5a\x87\x00\xaf\x5d\xdc\x0e\x8f\x82\xce\xf4\x61\x17\xcf\xd4\x78\x72\xe8\x64\xa1\x5d\x37\x03\xed\xba\x15\x9c\x32\x00\x00\x46\x67\x90\x27\xd3\xfe\x78\x69\x49\xcb\x0e\x26\xb7\x46\xfc\x2d\x6e\xd6\xd3\x4e\xcb\x53\xfa\x3b\xaf\x46\xa4\x0b\x71\x60\xbe\x26\x6d\xac\xdb\x2d\x4f\xae\xad\xeb\xf3\x3d\xa2\xe5\xe9\x56\x7e\x21\x91\x64\x46\xef\xf9\x6b\x4e\xe2\xc5\x65\xd5\x5f\x34\xd4\x3f\x44\x16\x6a\x60\x76\x0c\x2f\xd4\x75\xe1\x7b\x7f\x9a\xaa\x73\x76\xce\xb2\xeb\x97\x5a\xf4\xf9\x2d\x2e\xa9\xab\xd5\x0c\x0c\x95\x6d\x83\x4e\x8a\x1d\xca\xb7\x1a\x63\xf9\xd4\xbd\x98\x49\xce\x44\x92\x4f\xa7\xf3\x2c\x53\x0a\x5e\x2a\xe8\xa8\x85\x83\x76\x12\x0b\x06\xed\x3d\x08\xc1\x81\xf8\x03\xa8\xaa\x6a\xeb\x10\xb4\x33\x29\x42\xa8\x74\x10\xe4\x59\x1a\x29\xb5\x83\x72\xaf\xdd\x0e\xa3\x4e\xeb\x18\x77\x36\xa2\x93\x69\x9c\x1f\x9c\xb6\x58\xd3\xa1\x80\x9f\x24\x08\xb2\xb7\x01\x4a\x6a\x30\xc0\xc1\xca\x1e\x02\x35\x08\xde\x4a\xa5\xeb\x3a\x14\x51\xe8\x07\x6a\x76\xd0\x10\x23\xe8\x2d\xb5\x72\xbd\x05\xc9\x11\x72\x78\x84\xbd\x88\x7f\x54\x6a\x6b\xa5\xa8\x3b\xf5\xbc\x59\x3f\xbc\xbd\xaf\xb3\xd1\xb5\x28\x86\x76\xe6\xd9\xef\x00\x00\x00\xff\xff\x6e\x4e\x34\x79\xf6\x03\x00\x00")

func srcIndexTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcIndexTsx,
		"src/index.tsx",
	)
}

func srcIndexTsx() (*asset, error) {
	bytes, err := srcIndexTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/index.tsx", size: 1014, mode: os.FileMode(493), modTime: time.Unix(1550808960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcReactAppEnvDTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\xd7\x57\xb0\x29\x4a\x4d\x4b\x2d\x4a\xcd\x4b\x4e\x55\x28\xa9\x2c\x48\x2d\xb6\x55\x2a\x4a\x4d\x4c\x2e\xd1\x2d\x4e\x2e\xca\x2c\x28\x29\x56\x52\xd0\xb7\xe3\x02\x04\x00\x00\xff\xff\x5d\x1f\x64\x80\x28\x00\x00\x00")

func srcReactAppEnvDTsBytes() ([]byte, error) {
	return bindataRead(
		_srcReactAppEnvDTs,
		"src/react-app-env.d.ts",
	)
}

func srcReactAppEnvDTs() (*asset, error) {
	bytes, err := srcReactAppEnvDTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/react-app-env.d.ts", size: 40, mode: os.FileMode(420), modTime: time.Unix(1550808960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcServiceworkerTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\xdf\x73\xe3\xb6\x11\x7e\xe7\x5f\xb1\xc9\x64\x42\x69\x2a\x91\xb6\xe3\xf4\x5a\x79\x54\x8f\xe3\x78\xa6\x97\xf1\xf8\x3c\xf6\x39\x7e\x70\xdd\x04\x22\x96\x22\x62\x08\x60\x01\x50\x3a\x8d\x4f\xff\x7b\x67\x01\x92\xa2\x28\xdb\xb9\xa6\xd1\xc3\x9d\x4c\x60\x3f\x2c\xf7\xd7\xf7\x41\x69\x0a\x1f\x0b\x61\x41\x97\x4e\x68\xc5\x24\x64\x9a\x23\x08\x0b\x95\x45\x0e\x4e\x83\xc1\xb9\xb0\x0e\x0d\x30\xb0\x68\x96\x22\x43\x58\x69\xf3\x84\x26\x89\xd2\xb4\x5d\x1d\x0c\xc9\x46\x69\x07\x19\x93\x12\x39\xcc\xd6\xc0\x31\x67\x95\x74\x49\x14\x35\x87\x48\x74\x16\x5c\x81\xc0\xca\x12\xa4\x66\x1c\x72\xe6\xb1\xb5\x02\x5b\xcd\x2c\xfe\xa7\x42\xe5\x60\x29\xac\x70\x16\x84\x82\xd2\x68\x5e\x65\xe4\xd9\x08\x98\xe2\x30\x17\x4b\xb4\x04\x27\x1c\xe8\x3c\x97\x42\x21\x64\xac\x64\x33\x21\x85\x13\x68\x13\xf8\xa7\x5e\xe1\x12\xcd\x88\x76\x30\x69\x35\x2c\x90\x29\x3a\x94\x39\xe0\xb8\x44\xa9\x4b\x34\x16\x06\x84\x56\x59\x34\x76\x48\x70\x2b\x21\x25\x68\x25\xd7\x60\x11\x81\x63\x29\xf5\x1a\x39\x54\x25\x67\x0e\xed\xcb\xee\x39\x0d\x0c\x4a\x36\xc7\x11\xb0\xdc\x07\x48\x4a\x7a\x39\xc2\xc3\x4f\xc2\x3a\xa1\xe6\xe0\xd8\x8c\x62\x8b\x8a\x30\xe8\xcd\xc9\x00\x0a\xb6\x44\x98\x21\x2a\xc8\xa4\xb6\xc8\x47\x60\x85\xca\x10\x4a\x83\x4b\xa1\x2b\x2b\xd7\x90\xb1\xac\x40\x1e\x42\x6c\x75\x65\x32\xb4\xc0\x0c\xd6\x2e\x71\x0a\x0e\xc1\xcd\x58\xf6\x34\x37\xba\x52\xbc\x0e\xb3\x06\x89\xcc\x28\x58\x68\x83\xc0\x66\xba\x72\x61\x1f\x2a\xcc\xc9\x6b\x9d\x83\xa3\x54\x2c\x34\x47\xe9\x63\x2a\x94\x75\x26\x04\xd9\xbf\x69\xa1\x57\xe0\x34\x81\xe9\xd2\x8d\x85\x1a\x81\x41\xc6\xa1\x70\xae\x9c\xa4\xe9\x4c\xb8\x44\xae\xd3\xf3\x9b\xb3\xf1\xf5\xfd\x59\x14\x65\x5a\x59\x07\xc2\x5e\xea\x8c\xc9\x42\x5b\x07\x53\xf8\x41\x6b\x89\x4c\x0d\x22\x80\x95\x50\x5c\xaf\x12\xa9\x33\x46\x07\x24\xb4\x43\xb1\x05\xc2\x74\x3a\x85\x58\x36\x46\x31\x7c\xfe\x1c\x01\x00\xa4\x29\x3c\x4c\x26\x87\x8f\x54\x4d\xe4\xf7\xfb\xeb\xe5\x5f\xa1\xdd\x06\x8c\x73\x83\xd6\x26\x7e\xef\xdb\xd8\x1e\xa6\x8b\x7b\x78\xf4\x2e\x39\x48\x0e\x92\xc3\xf4\x6f\x84\x4e\x8e\x0b\x8e\x06\x79\x07\x3f\xd7\x86\x8e\x3c\x7e\xfb\x80\x64\xc1\x5c\x56\x0c\xfc\x1e\x80\xf4\xdf\x87\x47\xef\x06\xa7\x93\x7f\x25\x83\xd3\xc9\xd1\xf7\x0f\x07\xe3\xef\x1f\x3f\x1f\x3d\x1c\x8c\x8f\x1f\x1f\x0e\xc6\x7f\x7f\xfc\xfc\x70\x70\xf8\x78\xea\xbf\xfa\x7f\x4e\x87\xc3\xe7\xef\x36\xdf\xa4\xde\x7c\x18\x0d\x4f\xa2\xc8\xad\x4b\x84\x73\xad\x72\x31\x87\x29\x3c\x47\x00\x5a\xdd\x56\x59\x86\xd6\x9e\x4e\x60\x10\x9a\xcc\x78\x27\x26\x70\x1b\xba\xf0\xde\x37\xe1\x4d\x67\x69\x08\xd3\x7f\xc0\x52\x0b\x7e\xe2\x01\xee\x7c\xa5\xfc\x31\xfb\xcd\x49\x14\xe1\xa7\x52\x1b\x07\x79\xa5\x7c\x6d\x6c\x5b\x3d\xf3\x8e\x9e\x4e\x6a\x8f\x87\xde\x61\x91\xc3\xa0\x34\x9a\x5c\x4e\x50\x2d\x93\xab\x0f\x3f\x5e\xfc\x72\x71\xf5\x73\x48\xc6\xb6\x8f\x63\xf8\xf6\x5b\x88\x6d\xd7\x87\x98\x8a\x59\xb1\xa5\x98\x33\xa7\x4d\x80\xf3\x19\xfb\x58\x20\xdc\xdd\x5c\xfa\x54\xf9\x12\xd5\x86\x32\xc7\x96\x4c\x48\x36\x93\x48\x76\xd4\x74\x33\xa3\x57\xd4\xca\xa1\xcb\x6d\x55\x7a\xc7\x6f\xef\x43\x16\x43\x85\x96\xd5\x4c\x8a\xec\xce\x48\x98\x82\xc2\x15\xe1\x36\x09\x6c\xfc\x06\x66\xe1\x19\x50\x2d\x27\xf0\x0c\x0f\x4f\xb8\x9e\x80\x75\x46\xa8\xf9\x63\xf3\x05\x36\xb0\x19\xfa\xd7\xbb\xbe\xfb\xe1\xf2\xfd\xf9\x2f\x77\x37\x97\xa3\x1a\x65\xaf\x58\x0c\xe6\x21\xc5\x27\xfe\x3f\x1f\xa0\xc6\x89\x44\x1b\x31\x17\x0a\xbe\x9a\x4e\xf7\x0c\xc3\x52\x13\x06\x1f\x88\x0f\x95\xe9\x0d\x5f\x58\x69\x15\x3b\xff\x07\x21\x6f\xdd\xa1\x00\x69\x05\x0c\xb8\xc8\x73\x34\x34\xaf\x02\xe0\x16\x2d\x37\x7a\x01\x2b\x0a\x95\xae\x4c\x18\x48\xc2\x7a\x7c\xe4\xa0\x55\x12\x66\xf5\x42\xcc\x0b\x07\x05\x2b\x69\x78\x89\x1c\x18\x9c\xff\x78\xd5\x21\x86\x2d\x9e\xb7\x04\x66\x2d\x3a\x7b\xe2\x07\x28\xcd\x0a\x3b\x49\xd3\xb9\x70\x45\x35\x4b\x32\xbd\x48\x73\x96\xe1\x4c\xeb\xa7\x34\x33\xc8\x1c\x8e\x0d\xb2\xcc\x8d\x59\x59\xa6\xc2\xda\x0a\x6d\x7a\xf4\xdd\xbb\xe3\x1a\xd3\xa0\xab\x8c\x0a\x61\xdb\x44\xdd\x56\x64\x9c\x5f\x2c\x51\xb9\x4b\xaa\x44\x85\x66\x10\x13\x8b\xc4\x23\x18\xf8\xe2\x6d\x42\x16\x52\x6e\x57\x21\xdd\xbf\x7e\xf3\xdc\xad\xcc\x6d\xac\x36\x69\x1d\xd4\x71\xcd\x68\xbf\xd9\x5f\x4f\xa2\x1a\x83\xf2\xd5\x19\x6b\xdb\x7c\xd4\xa5\x29\x2c\x05\xc3\x54\x4a\x51\x61\x68\xb5\x9d\x22\x09\x5c\xa2\x8b\x2d\x64\x05\x66\x4f\x21\x74\xbd\xe4\x59\x47\x7c\xe3\x49\xc2\x82\x36\xc4\x9b\x49\x8b\xee\xcd\x7e\x66\x52\xf0\x9d\x4e\x1d\xf8\xd7\x19\x41\xe8\xbe\x61\xeb\xa7\x77\xe7\x8c\x73\xb0\x7a\x81\x34\x20\x45\x4d\xe4\x52\xcf\xe7\x9e\x82\xf4\xd6\xb5\x11\x94\x5a\x28\xcf\x4c\x1d\x32\x74\xda\xf3\x56\x07\x6f\xd7\xdf\xf4\xfa\xfe\x0c\xb8\xce\xaa\x05\x2a\x17\x8a\xb4\xdd\xdc\xf6\x6d\xb2\xd3\xd3\x09\x71\xc6\x3a\x71\x05\xaa\xc1\x6e\x6e\x9a\xfc\x68\x89\x89\xd4\xf3\x41\xe7\x31\x40\xec\xe3\xba\xc2\x99\x57\x08\xc2\xc2\x0c\xc9\xd7\xba\x36\x3d\x27\x8e\x73\x61\xac\x23\x7d\xb1\x0d\x6b\x0c\x7f\xd9\x81\x01\x88\xeb\x8c\xee\x12\xe2\x28\x70\xf7\xcb\x5c\x16\x77\x20\xea\x9e\xf5\x05\xd8\x7e\xdf\x00\x4a\x8b\xbb\x75\xf0\x3e\x88\x9e\x4e\xee\x7f\xaa\xac\xdb\x8a\xa6\xdd\x40\xb6\x96\xcd\x7a\x48\xf3\xfd\x5e\x6e\xeb\x03\xa3\xad\x03\x9b\x68\x13\x45\x7b\xb3\x78\xc7\xbe\x99\x52\x0d\x4e\x6f\x42\xbf\x92\x29\x7f\x46\xd2\x0e\x77\x8f\x34\x0c\x0f\x7d\xf6\xba\xe4\xd1\xcd\x63\xf7\x79\xa2\x55\xd0\x25\x39\x29\x11\x98\x42\x3f\xe5\xb5\x4a\x50\xd6\x31\x29\x85\x9a\x87\xa3\x61\xba\x8b\xb2\x5d\xdf\x86\xdf\xb7\xe1\x9e\xdd\x14\x54\x25\xe5\x70\xa7\xa8\xba\x53\x63\x1b\x3d\x8f\xd1\xb3\x4f\xc8\x1b\xe6\x30\x2b\x98\x9a\xe3\x0b\xee\xbe\x7c\x6c\xe2\x8d\x02\xa1\xd5\x6b\xc8\xe3\x5d\x27\x82\xe5\x6b\x4d\x91\x69\xe5\x8c\x96\x12\x4d\xdf\x2a\x74\xb1\x0b\xda\xcc\xf7\xe8\xc8\xeb\x9f\x46\xee\x95\x06\x83\x22\xa4\x50\x3a\x9a\xea\x05\xb3\x41\x42\xe6\xe8\x68\x61\xb4\x8f\x37\xab\xc5\x5f\x23\x2b\xf7\x38\x84\xa6\x50\x98\x45\x61\x86\xd3\x66\x2d\x79\xa7\x50\x5b\xac\xe6\xd8\x4a\x39\x21\x3d\xeb\x66\x52\xd0\x03\xaf\x70\x49\x99\x06\x29\x9b\xf4\x4c\x5f\x6d\x75\xfa\xc4\x57\xb8\x6a\x91\x77\x98\x9d\x84\xa9\x77\x6f\x86\x81\x70\x56\x05\x06\xb2\xdf\xef\x75\x8f\xe4\xdd\x20\xf9\x16\x22\x48\xa4\xd6\x71\x0a\x6e\x6b\x56\xda\xeb\xfa\x24\xee\xa1\x75\x27\x6b\xfb\xf6\x17\x9f\x30\xab\x1c\xfa\xcb\x0d\x49\xee\xde\x0e\xca\x79\xe8\x39\x52\x37\xe1\x5b\xd2\x28\xb0\xfd\x54\x43\x7f\xcb\x4e\x93\x75\x66\x4f\xf8\x6c\x76\xfe\xde\x9b\x42\xad\x93\xbd\xf2\xa1\x6b\xd0\xda\x15\x34\x3f\xdb\x5a\x69\xcb\xa8\x9f\x26\x1a\x65\xc4\x59\xbe\x5c\xd0\xe4\x98\x39\x70\x62\x81\xc4\x0d\x5c\xd8\x52\xb2\x35\xb0\x7d\x9b\xaf\xcf\xb7\xc9\xab\xeb\x93\x72\xd0\x5c\xcd\x2a\x8b\xc9\xd7\xb0\x40\x6b\xd9\x1c\xdf\xaa\x8c\xf8\xf7\x71\xe2\x3f\x31\x31\xb5\xb6\x7e\x33\x33\xf5\x9e\xff\x29\x35\xd1\x4b\xdf\x37\xed\x38\xaf\x15\x4d\x3d\x5d\x33\x7f\x89\x40\x63\xb4\xe9\x6b\x17\x0a\x8b\x5f\x18\xc4\x17\x7e\x9d\x57\xa6\xe1\xc1\x4e\xff\xee\xe8\xfa\x78\x04\xde\x64\x78\xd2\xb2\x46\x97\x31\xde\x54\x15\xbf\xc3\x1c\x69\x0a\xe7\x8d\x96\xa1\x02\xe9\xb9\x91\x31\x45\x6d\xea\x67\x7f\x02\xef\x73\xba\x7a\x67\x8c\xe4\xa9\x41\x7f\xc9\x6f\xee\xbd\x54\x01\x7e\x5a\xbd\xc4\x32\xb6\xd4\xca\x62\x37\x12\x94\x5e\x65\x2b\xb3\x77\x60\x10\x4e\xe1\x17\x01\x2f\xf9\x57\x48\x77\x54\x29\xd7\xbe\xe7\xe7\xe8\xbc\xc2\x61\xf0\xd3\x2d\xe4\x42\xb6\x95\x17\x58\xa8\x9e\x37\x1f\xe9\xce\x45\x04\x14\x0e\x4e\x0a\x64\x1c\x8d\x4d\xe6\xe8\x06\x71\xbd\x67\x4c\x17\xb3\xb8\xcd\x3a\x55\x53\x87\xc2\x6b\x43\x62\x85\xca\x7a\x5a\x38\x3e\x38\x6e\x2e\x9c\xf4\x19\x74\x8f\xfa\x2a\x70\x56\x5d\x87\xcd\xe3\x44\x28\x8e\x9f\x3e\xe4\x83\xf8\x37\xb6\x64\x36\x33\xa2\x74\xf1\xd0\x83\x8d\x0f\x87\x35\x52\x4f\x7b\x5e\xe9\x7e\x40\xea\xd0\x5f\x1b\x3d\x63\x33\x8a\x42\x47\xfd\xb3\xb2\x4c\xe0\x66\x3f\x11\xe1\xf3\x05\xf2\xed\x35\x01\x00\x7d\x11\x50\xa9\xed\xaf\x41\xaf\x29\xbf\xfd\x7b\x52\xa8\x91\xc1\x4e\x6b\x6d\xbe\x58\x7f\xdd\xbe\x16\x88\x0c\x91\xd3\x85\x4e\x69\xb3\x60\x32\xf9\x83\xca\xab\xdb\xa9\xfb\x57\x8c\x3d\x5e\x8b\xaf\x34\x08\xe5\xd0\x28\xf4\x75\xa6\x30\x34\x5f\xed\xd6\x59\xd0\xb4\xcd\x9d\x41\xa8\x76\xc0\x2d\x34\xc7\x96\x89\x76\x3b\xb8\x7f\x0d\xef\x46\xb9\xbd\x79\x7f\xc9\x85\xfa\xff\x48\xf5\xab\x69\x3e\xe9\x29\xd4\xff\x06\x00\x00\xff\xff\xf0\x78\x10\x2c\x4e\x14\x00\x00")

func srcServiceworkerTsBytes() ([]byte, error) {
	return bindataRead(
		_srcServiceworkerTs,
		"src/serviceWorker.ts",
	)
}

func srcServiceworkerTs() (*asset, error) {
	bytes, err := srcServiceworkerTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/serviceWorker.ts", size: 5198, mode: os.FileMode(493), modTime: time.Unix(1550808960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcActionsLoginActionTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xd1\x8a\xdb\x30\x10\x7c\xf7\x57\xcc\x9b\x15\xc8\x29\xef\x86\xb4\x1c\x47\xaf\x04\x42\x5b\x1a\xee\xb9\x08\x4b\xc9\x09\x1c\x49\x68\xd7\x6d\x83\xc9\xbf\x17\xc9\x92\x53\x2e\xa5\x70\x82\xc0\xee\x64\x76\x77\x66\xd7\xf6\x1c\x7c\x64\x4c\xd8\x7f\xfd\xbc\xfb\xf2\xe3\xf0\xf2\xf4\xf4\xe9\x70\x58\x97\xf4\xf9\x71\xb7\xc7\x15\xc7\xe8\xcf\x68\xa5\xdc\xf4\xde\x11\x2b\xc7\xb4\x51\x3d\x5b\xef\x1e\xf8\x12\x0c\xb5\x4d\xe9\xf2\xf8\x6d\x77\xe3\x9e\xbd\x1e\x07\x43\x1b\x15\xac\x9c\xe3\x85\x37\xe1\xe5\xfb\xfe\xf0\x77\xe3\x4a\x36\x4e\x07\x6f\x1d\xdf\x57\xb0\x57\xc4\x4b\x49\x34\xaa\xe7\x87\x8c\xd9\xe3\xa5\x6d\x1a\xf3\x3b\xf3\xb2\x40\x0c\xfe\x64\x1d\xb6\x10\x23\x99\xe8\xd4\xd9\x74\x20\x8e\xd6\x9d\xd6\x08\x8a\xe8\x97\x8f\xba\x22\x2b\x6c\x3f\x40\x68\x4b\x41\x71\xff\xda\xe1\x79\x74\xd9\x59\xc6\xa7\x06\xf8\xa9\x22\x82\xba\x0c\x5e\x69\x6c\x33\x02\xdc\xda\xd6\x68\x9d\xf1\x5b\xf3\x1a\x35\xc0\xb5\x01\xa2\xe1\x31\xba\xb4\x1f\xb1\xca\x4c\x19\x3c\xb1\x48\x5b\x90\x59\xec\x1a\xd3\x75\xfe\x95\x59\x29\x29\x54\x7e\x35\x4e\x44\x43\xc1\x3b\x32\x55\x56\x7a\xd9\xbe\xa4\xb1\xef\x0d\x91\x68\x07\x7f\x3a\x19\x0d\xeb\xda\x55\x21\x94\xb1\xd5\x9d\xa8\x85\x40\xba\x5b\xf7\xe6\xe6\xcb\x9f\x45\x42\x87\x09\x5a\xb1\xea\x50\x87\xcb\x94\x66\x43\xe9\x15\x7d\x55\x66\x9f\x47\x98\x18\x7d\xbc\x17\x99\x61\xd1\x1e\x95\x1d\x8c\x06\xfb\xf9\x44\xef\x14\x9a\xbe\xc6\xff\xa8\xcc\x33\xe4\xb2\xa8\x8f\x6f\x80\x59\x7c\xa1\xfd\xc3\xc4\xb5\xf9\x13\x00\x00\xff\xff\xa9\xfb\x34\x75\x0c\x03\x00\x00")

func srcActionsLoginActionTsBytes() ([]byte, error) {
	return bindataRead(
		_srcActionsLoginActionTs,
		"src/actions/login.action.ts",
	)
}

func srcActionsLoginActionTs() (*asset, error) {
	bytes, err := srcActionsLoginActionTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/actions/login.action.ts", size: 780, mode: os.FileMode(420), modTime: time.Unix(1550848862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcActionsLogoutActionTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x51\x6b\xe2\x40\x14\x85\xdf\xf3\x2b\xce\x9b\x11\xdc\xf1\x3d\xe0\x2e\x22\xeb\x22\x08\x2e\x8d\x3e\x97\x21\xb9\xd5\x58\x9d\x3b\xcc\xdc\x60\x25\xe4\xbf\x97\x4c\x32\x56\x6c\xe9\x43\x03\x81\xcc\xc9\xb9\xe7\x7c\xc9\xad\xce\x96\x9d\xa0\xc1\x7a\xf3\x6f\xb3\xdb\x3e\xe7\xbb\xc5\xe2\x6f\x9e\x4f\xe2\x79\x39\x5f\xad\xd1\xe2\xc5\xf1\x19\x23\xa5\xa6\x05\x1b\x2f\xda\x88\x9f\xea\x42\x2a\x36\xbf\xe4\x6a\xc9\x8f\x92\x21\x67\xfe\x7f\xf5\xe1\x3d\x73\x59\x9f\xc8\x4f\xb5\xad\x54\xff\x7c\xf3\x35\xd8\x3d\xad\xf3\xfb\xe0\x68\x26\x53\x5a\xae\x8c\x7c\x9e\xf0\xc2\x8e\xee\x47\x82\x30\x4a\x12\x7a\x0b\x8e\x80\x86\x13\xef\xb9\x16\xcc\x90\x8e\x31\xfb\x8d\xb4\xac\xbc\xd5\x52\x1c\x32\x2c\x6b\x13\x90\x83\xde\x24\x80\x23\xa9\x9d\xe9\x98\xd3\x71\x02\x00\xca\xb2\x97\xb4\x23\x53\x7d\xcc\x04\x4d\x3b\xdc\x38\x5e\x24\xeb\x19\xd4\x9e\x24\x17\x2d\x94\x8e\x55\xed\xc9\xa9\xe3\x45\xb6\xfc\x4a\x06\xc1\x3c\x64\xc9\x81\x4c\xea\xc8\x5b\x36\x9e\x62\x65\x77\x0d\xb5\x11\x2c\x8d\x3a\xd0\xfd\xcb\xec\x71\x13\xb7\xb7\x56\x5f\x4f\xac\xcb\x0c\x0d\x4a\x2d\x3a\x43\x0c\x57\xdd\x11\xed\x60\x1c\xfa\x23\x46\x11\x3a\xc8\x39\x76\x3f\x80\xe8\xd6\xff\x0d\x41\x88\x55\xb7\x8f\xfc\xf3\x20\xf4\x60\x83\xed\x0b\xc0\x36\x79\x0f\x00\x00\xff\xff\x27\x1b\x3b\x06\x7f\x02\x00\x00")

func srcActionsLogoutActionTsBytes() ([]byte, error) {
	return bindataRead(
		_srcActionsLogoutActionTs,
		"src/actions/logout.action.ts",
	)
}

func srcActionsLogoutActionTs() (*asset, error) {
	bytes, err := srcActionsLogoutActionTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/actions/logout.action.ts", size: 639, mode: os.FileMode(420), modTime: time.Unix(1550809297, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcConstantsActionTypesTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x31\x53\xc4\x20\x10\x85\xfb\xfb\x15\xe9\x52\x5e\x71\xb5\x45\x86\x6c\x22\x33\x08\x19\x21\xe3\x58\x51\x38\xb6\x9e\xa3\x57\xf8\xf3\x1d\x72\x62\x58\x76\x81\x94\x7c\xfb\xde\x3e\x36\x40\xde\x7f\x3e\xaf\x5f\xb7\xee\xed\xfa\xf1\x7d\xeb\x56\xe9\x95\x19\x46\xa9\xe7\xee\xa1\xeb\xf7\x55\x7f\x42\x32\x65\x66\xa9\xbd\x5d\x85\x00\x6b\x83\x12\x01\x56\x3c\x0d\x52\xed\xca\xb0\xa2\x32\xb3\xba\xac\x69\x42\x78\x79\xd2\x36\x2e\xfb\xd3\xf9\xdc\x21\xad\x30\x7a\x92\xb3\x5f\x97\x71\x70\x10\xfa\xfd\x05\x70\xbc\xe5\x8e\x81\x94\x52\xe7\x0c\xce\xdb\x8b\x9f\xa4\x02\x9b\x0e\x96\x73\x36\x16\x89\x62\x2a\x81\xbc\x4f\x19\x31\x28\x3e\x97\x29\xb5\x7b\xa4\xf1\x39\xa7\xee\xd1\xbc\xe8\x70\x6f\xc2\x4e\x93\x74\x06\xd7\xbd\x31\x35\x67\xd4\x65\x5f\xb5\xf0\x62\x44\xc3\xe6\xac\xe2\x8a\x41\x08\x30\x7b\x03\x05\xe1\x9e\xe0\xa9\x72\x58\xf3\xfd\x4f\x84\x08\x75\xac\xcb\x36\xef\xfd\x53\x27\x61\x1c\x6f\xb8\x63\x24\x81\xd4\x67\x16\xd0\x34\x93\xd2\xaa\x33\xe6\x65\x88\x7a\x26\xf3\xfc\x34\x38\x9a\xc7\xf1\x86\x3b\x66\x12\x58\x3c\x0b\x92\xca\xf1\x86\x3b\x3b\xcc\x5a\xaa\x05\xe7\xa5\xb6\x0b\x08\x07\xe3\xf6\x76\xb6\xeb\x46\x28\xff\x12\xb1\xc6\x4b\x3d\x99\xfc\x55\x57\x24\xc7\x7b\xa6\xaf\xbc\x54\x6f\xcd\x66\x1f\x01\x1c\x1d\x6e\xc3\xad\x9d\x6c\xa2\xf2\x64\xa8\x7c\xac\x17\x3f\xd1\x5e\x2b\xfc\x13\xee\x47\x49\xee\x48\xa9\x76\xa0\x0b\xfa\xc3\xe4\x85\x82\xdf\x5e\x0a\x5b\xc8\x0b\x2d\x3f\x0a\x47\xb4\x3f\xfd\x06\x00\x00\xff\xff\x71\x01\x46\x37\xfe\x07\x00\x00")

func srcConstantsActionTypesTsBytes() ([]byte, error) {
	return bindataRead(
		_srcConstantsActionTypesTs,
		"src/constants/action-types.ts",
	)
}

func srcConstantsActionTypesTs() (*asset, error) {
	bytes, err := srcConstantsActionTypesTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/constants/action-types.ts", size: 2046, mode: os.FileMode(420), modTime: time.Unix(1550809306, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcComponentsNavigationNavbarComponentTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x6f\xdb\x3c\x0c\xbe\xfb\x57\x10\xba\x38\x79\x91\x58\xed\x0b\xec\x12\xc4\x3d\xb4\xc3\x80\x02\xdd\x07\x9a\xde\x07\xd6\x62\x13\xa1\x96\x64\x48\x74\x96\xce\xf0\x7f\x1f\x24\xa7\x4e\x6a\x14\x03\x7a\xd8\x4d\x24\x1f\x3e\x24\xc5\x0f\x6d\x1a\xe7\x19\xfe\x03\x0c\x70\x4f\x58\x31\x3c\x79\x67\x20\xf7\xf1\x9d\x67\x47\x73\x07\x5f\xc9\xb6\x0b\xb8\x35\xb8\x25\xe8\x8f\x98\x40\x06\x2d\xeb\x6a\xd9\xea\xe5\x14\x7f\xa7\xed\xf3\x08\x4c\xc6\xa5\x77\x2d\x93\x5f\x2a\x67\xce\x70\x95\xb3\x96\x2a\x9e\x42\x49\xb5\x87\x33\x54\xed\xb6\xae\x3d\x81\x8a\x42\x16\x85\xc4\x8a\xb5\xb3\x41\x0e\xc6\x62\x10\xf3\x2c\xab\x9c\x0d\x0c\x86\x6c\xbb\xe1\x97\x9a\xa0\x84\x2e\x03\x90\x12\x1e\x9d\x57\xe4\x57\x90\x5b\x67\x29\x5f\x64\x70\xd4\xdc\xa3\xd2\x6d\x58\xc1\xc5\x2b\xec\xb0\xd9\xa1\x72\xbf\xce\x91\x52\x82\x41\xbf\xd5\xf6\xda\x31\x3b\xb3\x82\xfc\x92\xcc\xab\x85\x3d\xda\xa0\x63\xf8\x15\xe4\x8f\xee\xb0\x0c\xc9\x1f\x2e\x8a\x4f\x01\x08\x03\x2d\xa0\x41\xa5\xb4\xdd\x9e\x54\x79\xd6\x67\x59\x55\x63\x08\xf0\x0d\xf7\xd7\xe8\x6f\x9c\x69\x9c\x25\xcb\x40\x07\x26\xab\x8e\xfd\x28\x46\xfd\x1a\xed\xcb\x02\xd0\xbe\x5c\xa5\x82\x02\xeb\xea\xf9\xc1\x35\xb1\x33\x50\xc2\x6c\x0e\xe5\x15\xf0\x4e\x87\x22\x10\x6f\x18\x99\x66\x5d\xfa\x85\x2f\xfa\x40\x6a\x05\xec\x5b\x82\x7e\x9e\x01\xb4\x76\xf3\x41\xdf\x27\xac\x43\x72\xce\x00\x3c\x59\x45\x7e\x36\x4f\x49\x44\x91\x5b\x6f\x61\x96\x04\x80\xb5\xd2\xfb\xab\xe3\x1b\x60\x9d\x02\x0c\xbf\x5c\x53\x08\x10\x62\x47\xca\x6e\x6c\x4e\x0f\xda\xee\xc9\x33\x29\x08\xfa\x37\x95\xc2\x60\x08\x7a\x4f\x02\x90\x19\xab\x1d\xa9\x52\xb0\x6b\xc4\x89\xf2\x48\x5a\xdc\x32\x99\x73\x2d\xc0\x3a\xcd\x1c\xbb\x52\x48\xf1\xd6\x02\xb0\x1e\x26\x77\x88\x11\x0c\xd6\xb5\x80\xe0\xab\x52\x08\x90\x13\x16\x19\x69\xde\xc4\x93\xef\x06\x3c\xa5\x01\x18\x4a\x81\xe2\x2f\xd9\x7c\x6f\xe2\x70\xc0\xe5\xbf\x24\xff\xff\x83\xe4\xa9\x35\x8d\x1b\xe6\xb6\x14\x5e\x6f\x77\x3c\x0d\x33\xba\x4f\xbe\xd3\xa2\xa1\x52\x0c\x8b\x27\x26\x36\x67\x6f\x6a\x5d\x3d\x97\xdd\xcf\x38\x54\xdd\xc4\x0a\xc3\x98\x35\xde\x35\xa1\x18\x08\x66\xf3\x09\xa6\xef\xdf\x28\xa6\xbd\xbc\x4b\x5e\x93\xa6\xbd\x5f\xa8\x1c\x2b\x3d\x9b\x49\x79\x2e\xaf\xe5\x38\xb0\x31\x8d\x3e\x6d\xe5\x70\x40\xb0\x49\x9b\xf0\xe0\x7e\xc4\x64\xe3\x9a\x84\x28\xaf\xe2\x0a\xa6\x85\x99\x75\x71\x23\x46\xf4\x67\x1d\x1a\xe4\x6a\x77\x72\x88\xc5\x0f\x35\x46\x5a\x3a\xa4\x6b\xa6\xe8\x09\xdb\x9a\x5f\x2f\x5f\x5c\x9c\x49\xa8\xc5\xa0\x9a\xf0\x65\xf3\xd9\xe4\x50\xcc\xb3\x3f\x01\x00\x00\xff\xff\x51\x9d\x44\x7d\xbe\x05\x00\x00")

func srcComponentsNavigationNavbarComponentTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcComponentsNavigationNavbarComponentTsx,
		"src/components/navigation/navbar.component.tsx",
	)
}

func srcComponentsNavigationNavbarComponentTsx() (*asset, error) {
	bytes, err := srcComponentsNavigationNavbarComponentTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/components/navigation/navbar.component.tsx", size: 1470, mode: os.FileMode(420), modTime: time.Unix(1550815017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcComponentsNavigationPrivaterouteComponentTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xd1\x8e\x9b\x30\x10\x7c\xf7\x57\xcc\x1b\x50\x11\xf2\x8e\x4a\xaa\xaa\x3f\x10\xa5\xfd\x01\x0b\x36\x8d\x25\xb0\xd1\xb2\x54\xe9\x21\xff\xfb\xc9\x0e\x20\xe0\x4e\xf7\x66\xef\xce\xcc\x8e\xd7\x63\xba\xde\xb1\xe0\x1b\xf4\x80\x1b\xe9\x5a\x70\x67\xd7\x21\xe1\x70\x4e\xd4\xdc\x9e\x70\x73\xa3\x50\x8e\x1b\x35\x86\xa9\x16\xf8\x2d\xee\xc4\xa1\xcb\xa7\xc6\x75\x1b\x4a\xed\xac\xfd\x04\x4a\xcd\xf8\x4c\x94\xaa\x9d\x1d\x04\x57\x36\xff\xb4\x50\x54\x47\x85\x34\xb0\xba\xde\x59\xb2\x52\xe2\xd7\x72\xcc\x61\x86\x9f\xa3\x3c\x1c\x9b\x37\x6a\x72\x14\x45\xc1\x34\x08\x7c\x86\xea\x82\x49\x01\xe6\x8e\x74\x8b\xc9\x62\x15\x60\x92\x91\x2d\xd2\x78\x01\xbe\xc7\x41\xf3\x05\x98\x66\x21\xbf\x56\x98\x6c\x43\x5c\x4d\x3d\xbb\x7e\x40\x75\x59\x1b\xd8\x59\xc0\x8f\x55\x72\x16\x5e\xbd\x46\xd1\x48\xf7\x38\x6f\xf9\x19\xca\x23\x69\xd9\xe6\xae\x0a\x88\xab\xa6\xe9\x50\x03\x7a\x2d\x0f\xab\x3b\x2a\x91\x9c\x5b\xf7\xd7\xd8\x24\xff\x80\x19\x44\x0b\x95\x98\xe2\xc6\x4b\x44\x1b\x45\xeb\x6a\x2d\xc6\x59\xf8\x03\xde\xef\x0b\x7b\xb7\xeb\x79\x01\xcd\xed\xd0\x08\xa5\xdd\x66\x8f\x2f\xd9\xbf\xe0\x2b\xe7\x07\xc7\x49\xb2\xce\x9b\xdd\xc5\xb1\x99\xf2\x4b\x62\x3a\xdd\xff\x0e\x9c\x3f\xee\xfa\xfa\x23\xa4\xb3\x86\xb6\xff\x63\x1e\xd2\x18\x88\xcd\x6f\x95\xaf\x29\xc5\x38\x10\x17\xdb\x86\xf2\x99\x52\xf4\x8c\x79\x6d\xe8\xae\xc7\x56\x96\xd4\x86\x77\x1d\x46\x05\xd3\x76\x6c\x5b\x95\xa5\xdb\xd8\x66\xea\x3d\x00\x00\xff\xff\x0a\x09\xa0\xa5\x44\x03\x00\x00")

func srcComponentsNavigationPrivaterouteComponentTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcComponentsNavigationPrivaterouteComponentTsx,
		"src/components/navigation/privateRoute.component.tsx",
	)
}

func srcComponentsNavigationPrivaterouteComponentTsx() (*asset, error) {
	bytes, err := srcComponentsNavigationPrivaterouteComponentTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/components/navigation/privateRoute.component.tsx", size: 836, mode: os.FileMode(420), modTime: time.Unix(1550809072, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcModulesApiModuleTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x41\x8f\xda\x3c\x10\xbd\xf3\x2b\xe6\xb0\x52\x12\x89\x0f\xf6\x53\x6f\xd1\x42\x45\x69\xb6\xad\xb4\x52\x29\x84\x73\xd7\x0d\x03\xc9\xd6\xd8\xa9\x3d\x69\x77\x85\xf2\xdf\x2b\x27\x24\x6c\x62\x40\x6d\x55\x65\x51\xe7\x40\x92\x37\xf6\xc8\x33\xef\xcd\xc8\x24\xdb\x54\x2a\x02\xf6\x98\x48\xdd\x87\x1d\x4c\xcc\xcb\x1c\x75\x2a\x85\xc6\x7e\xf5\xf9\x2d\x43\x4d\x53\x29\xd6\xc9\x06\x72\x58\x2b\xb9\x05\xa7\xd8\xe2\xf4\x7a\x91\x14\x9a\xe0\xcd\x64\x11\x7c\x5e\xce\xef\x60\x04\x4e\x4c\x94\xfa\xc3\x21\x97\x11\xe3\xb1\xd4\xe4\xbf\xba\xbe\xfe\xbf\x5e\xa9\xca\x68\xb7\x2c\x22\xa9\x9e\x60\x04\x6e\x0f\x00\x60\x8b\x14\xcb\x95\x0f\x9a\x54\x22\x36\xfd\x02\xcb\x14\x6f\x02\x31\xb2\x15\x2a\xed\x83\xfc\xf2\x80\x11\x95\x60\xca\x14\xdb\xb6\xb0\x15\x23\xd6\x44\x48\x7e\x45\x71\x80\x3c\x18\x8d\x61\x57\x78\x14\x52\xa6\x04\x08\xfc\x01\x33\x25\xb7\x89\xc6\xf2\x44\xc6\x5c\x85\x5a\xf2\xef\xe8\xc3\x6d\x26\x22\x4a\xa4\xf0\xfc\x6a\xd5\x8d\x5d\x9c\xf1\x21\x6a\x65\xfb\xe8\xfb\x38\x6e\xd3\x79\x48\xbc\x6f\xe1\x99\xe2\x36\x58\x17\xc0\x8e\x63\x2c\x2c\x93\x2c\x72\x85\xd7\xfb\xa7\x0f\x22\xe3\x47\x62\x19\x73\xa6\x52\x10\x0a\xfa\x2f\x7c\x4a\xd1\xf1\xc1\x61\x69\xca\x93\x88\x99\x4c\x87\x0f\x5a\x0a\xe7\xf8\xbe\xc1\x60\xb0\x3f\x8a\xe5\xce\xed\x1d\x15\x43\xe5\xd3\xf6\x97\x6c\x99\xdf\xa6\x2f\xf7\xea\xcf\xbc\x78\xf3\x7a\x79\x25\xa3\xc9\xec\x83\xd1\x8e\xcd\xe3\xa1\x32\x1b\x24\x1f\xdc\x46\x44\xcd\xb3\x4d\x53\x52\x95\xb5\xa4\x05\x23\xd8\xb5\x32\x69\xea\xac\x58\x50\xfb\x6d\x55\x94\x1d\x74\x53\x2e\x1e\x9f\x13\xc6\xf3\x76\x70\xad\xda\x38\xef\x82\xf0\x08\x09\xf7\x57\xbb\xaa\xe5\xf2\xe1\xd5\xce\xe4\x95\xdf\x9f\xd4\xcb\x29\x4a\x6c\xbc\x9d\x74\x89\x35\x20\x6f\x40\x31\x0a\xd7\x9d\x07\x9f\x96\xc1\x22\xf4\x8f\x0c\x09\xcf\x4e\xf7\x59\xca\xc5\xe4\xa8\xb6\x7b\x27\x19\x3f\x1c\x24\x35\x43\xe4\x4f\x99\x3c\x47\x62\xd3\x67\x0f\x8d\xca\xf6\xc3\xa3\x1b\xc2\x67\x1f\x17\x5d\x32\x6e\xb7\x1d\x1c\xd1\xc1\xaf\x90\x3e\x1a\xff\x45\xca\x19\x45\x71\xc7\x9c\x77\x42\xee\x24\x9c\xbe\xbf\x00\x76\x5f\xba\xa3\xb3\xae\x1b\xba\x13\x72\x97\x97\xd0\xb8\x2f\x4c\xed\x0a\x39\x12\xfe\x83\xec\xbe\x0d\xee\x82\x30\xb8\x50\x82\xad\x65\x67\x19\xff\xfd\x22\xb5\x8a\x75\x46\x15\x50\xdf\xd6\xea\x23\xb6\x65\x92\x9b\x6b\x1c\x3e\x16\xff\x3c\x56\xb8\x66\x19\x2f\xee\x73\x3f\x03\x00\x00\xff\xff\xf6\xc6\xa5\x04\x8c\x0c\x00\x00")

func srcModulesApiModuleTsBytes() ([]byte, error) {
	return bindataRead(
		_srcModulesApiModuleTs,
		"src/modules/api.module.ts",
	)
}

func srcModulesApiModuleTs() (*asset, error) {
	bytes, err := srcModulesApiModuleTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/modules/api.module.ts", size: 3212, mode: os.FileMode(420), modTime: time.Unix(1550809133, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcModulesEndpointModuleTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xc1\x4a\xc4\x30\x10\x86\xef\x7d\x8a\xb9\xed\xc5\xb0\x87\xde\x16\x3c\x29\x82\xb0\x27\x8b\x0f\x10\xd2\xc9\x1a\x88\x33\x61\x93\xa2\x45\xf6\xdd\x25\x93\xd4\x0e\x8a\x97\xd2\xf9\xfe\xef\xcf\x34\x14\x3f\x13\x5f\x0b\x38\xa6\x5c\xe0\xf5\xe5\x3c\xc1\x3d\x7c\x0d\x00\x91\x2f\x81\x4e\x70\xb0\x29\x1c\xe5\xfd\x70\xd7\x28\x2f\x65\xc7\xbc\x14\xe1\x8e\xc9\x87\x4b\xe7\x6d\x10\x9e\xc7\xce\xf2\xd8\xfb\xce\xc6\x9f\xba\xb3\x51\xe8\xcc\x1f\x14\xd9\xce\xd3\x66\x6f\xc0\xf4\x5a\x5e\xc9\x3d\x3c\x4e\xdb\x59\x2b\x39\xe3\xe6\xdc\xba\x18\xb1\xe0\xde\x94\x71\xeb\x2d\xa9\x9e\x72\x56\x4b\x1b\x31\xfb\x6e\x4e\x48\x5a\xa8\xb3\x8a\x3d\x5f\xdf\x6d\xd1\x42\x23\x4a\x69\x2b\xb5\xd2\x3f\x62\x57\x1c\xa7\x55\x0b\x75\x56\x71\xbd\x90\xc4\xda\x91\x5b\x8a\xf3\xcb\x9c\xc6\x3f\x5a\x1e\x95\x13\x28\x27\x74\xe5\x29\x44\x3c\xc9\xaf\x04\xf0\x21\xe2\x33\x79\xee\x9d\x6e\x98\x8a\x8f\xf5\x61\x02\x79\x96\x32\x40\x7e\x43\x2c\xff\xc9\x12\x36\x7b\x00\xb8\x0d\xb7\xe1\x3b\x00\x00\xff\xff\xc4\xc8\xff\xe0\x40\x02\x00\x00")

func srcModulesEndpointModuleTsBytes() ([]byte, error) {
	return bindataRead(
		_srcModulesEndpointModuleTs,
		"src/modules/endpoint.module.ts",
	)
}

func srcModulesEndpointModuleTs() (*asset, error) {
	bytes, err := srcModulesEndpointModuleTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/modules/endpoint.module.ts", size: 576, mode: os.FileMode(420), modTime: time.Unix(1550809133, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcReducersIndexTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcf\x41\x6a\xc4\x30\x0c\x05\xd0\xbd\x4e\xa1\x5d\x26\x50\xa6\xfb\x40\x0f\xd0\x6d\x6f\xa0\xb1\xe5\xe2\xe2\x48\x41\x96\x61\xc2\x90\xbb\x97\xc4\x99\x32\x74\x69\xfe\xff\xcf\x76\x9e\x17\x35\xc7\x07\x06\x9d\x6f\x59\xf8\x8b\x63\x0b\x6c\x15\x37\x4c\xa6\x33\x0e\xc6\xb1\xdd\x07\x38\x7b\xad\xb2\x9d\xc1\xf5\x7d\x3f\x5c\xad\x0f\x06\x80\xa0\x52\x1d\xa9\x94\x3f\xe3\xe3\xbf\x7a\x79\x00\x1e\x06\x6c\x23\x40\x16\x67\x4b\x14\x18\x3f\x29\x78\x56\xc1\x3d\xf6\x75\xe1\x09\xab\x5b\x96\x6f\x40\x5c\x68\x2d\x4a\x71\x42\xbd\xfd\x70\x70\xd8\x00\x52\x93\x5e\x37\x55\x3f\xe9\x4b\x75\x72\x9e\x90\x64\x7d\xc3\xae\x4d\x4f\x76\x3c\x5c\x63\x6f\x26\xaf\xef\xeb\x9b\x67\x7d\xdc\x69\xbe\x1f\xdf\x8c\x9c\xa8\x15\x7f\xbd\x00\x7e\x03\x00\x00\xff\xff\xf4\xe0\x11\x20\x2a\x01\x00\x00")

func srcReducersIndexTsBytes() ([]byte, error) {
	return bindataRead(
		_srcReducersIndexTs,
		"src/reducers/index.ts",
	)
}

func srcReducersIndexTs() (*asset, error) {
	bytes, err := srcReducersIndexTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/reducers/index.ts", size: 298, mode: os.FileMode(420), modTime: time.Unix(1550809349, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcReducersUserReducerTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x92\x41\x6b\xbb\x40\x10\xc5\xef\xfb\x29\xde\x4d\xf3\xc7\x98\xbb\xf0\x3f\x84\xd0\x96\x40\x68\x0e\x26\xe7\x32\xe8\x4a\x36\x35\xbb\x61\x77\x24\x4d\xc5\xef\x5e\x5c\xb7\xa9\x96\xd2\x4b\x21\x07\x65\x67\xde\xce\xfc\xde\x38\xaa\xd3\xd9\x58\xc6\x3f\x90\x43\x29\x0b\x53\x4a\x8b\xca\x9a\x13\xa2\xe3\x85\xe7\x43\x26\x12\x22\x5c\x6b\xb1\xd9\x3e\xad\x9f\x5f\xf2\xfd\x6a\xf5\x90\xe7\x49\x08\x1f\x97\xeb\x8d\x3f\x6f\xf7\xbb\x89\xd6\xc7\xbd\x88\x2e\x34\x4d\xd3\x45\x61\xb4\x63\xd2\xec\x16\x54\xb0\x32\x7a\xce\xd7\xb3\x74\x91\x10\x5e\x80\xd2\x8a\x15\xd5\x39\x13\x4b\xfc\x47\x2b\x80\xc6\x49\x9b\x21\x8a\x12\x01\x28\xb7\x6c\xf8\x60\xac\x7a\x97\x65\x86\x8a\x6a\x27\xfb\xf4\xf1\xc2\x19\xda\x2e\x1c\x77\xe6\x55\xea\xbe\x42\x74\x42\xc8\x37\x6f\xbd\x94\x15\x35\x35\xa3\x6a\xb4\xc7\xc6\x2e\x10\xc6\xc0\x04\x83\xa7\x0c\xa4\xaf\x33\x0f\x77\x17\xc5\xc5\x01\xf1\x20\xa4\xbd\xd9\x41\x00\x0a\x72\x72\xfa\x41\xb2\xa0\x00\x56\x72\x63\xf5\x2d\x04\xd2\x34\xf5\xc4\xe4\x96\x99\x8e\xc2\xb6\x19\x69\x5f\x43\x04\xee\x99\xae\xb5\xa1\x32\x2d\x89\x69\x72\x2d\x43\xfc\xb9\x37\x72\xde\x76\xfc\x43\xc9\x2c\x94\x74\x62\x78\x7f\xf7\xdf\x2f\xe9\x0f\xe6\x6f\x7b\x18\xd9\x6a\xbb\xdf\x98\xa3\x3f\xe5\xee\xdc\x7b\x0c\x3b\x3c\xa1\xb7\x6f\x27\x3a\xf1\x11\x00\x00\xff\xff\x12\xa5\xe1\xf4\x6d\x03\x00\x00")

func srcReducersUserReducerTsBytes() ([]byte, error) {
	return bindataRead(
		_srcReducersUserReducerTs,
		"src/reducers/user.reducer.ts",
	)
}

func srcReducersUserReducerTs() (*asset, error) {
	bytes, err := srcReducersUserReducerTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/reducers/user.reducer.ts", size: 877, mode: os.FileMode(420), modTime: time.Unix(1550809360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcStoreIndexTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x41\x8f\x82\x30\x10\x85\xef\xfc\x8a\x89\x17\x20\x61\xe5\xbe\xc6\x83\x51\x0e\x24\x2a\x1b\x61\x37\xde\x1a\x96\x8e\xda\xa8\x2d\x69\x6b\xd4\x28\xff\x7d\x53\x28\x28\x64\x8f\xcc\xe3\x7d\x7d\xf3\x32\xec\x5c\x0a\xa9\xe1\x01\x85\xc4\x5c\x63\xaa\x85\xc4\x00\xf2\xb2\x3c\xdd\x57\x8c\xd2\x13\x5e\x73\x33\x28\xc4\xb9\x14\x0a\xa1\x82\x9d\x14\x67\x18\x49\xa4\x97\xdb\x68\xe2\x58\xbb\x3e\x5c\xf8\xb1\x91\xdc\x5a\xfa\xa8\x27\xae\xd3\xe1\x4b\x94\x8a\x29\x6d\xf9\xf6\x6b\x83\xf4\x52\xa0\x6c\xa9\xd6\x6a\xc5\xce\xac\xb4\x90\xf9\x1e\xff\xfb\x27\x3c\xb1\xdf\xd0\xea\xdd\xff\x52\x88\x8e\xdc\xa4\x1d\x8f\x43\xd9\x0c\x54\xc8\x38\x45\x93\xdc\x29\x04\x57\x1a\xe2\x75\x9c\xc5\xb3\x25\x49\xb3\x59\x16\xc1\x14\x1e\x95\x15\xec\xc6\x11\x3f\xe4\xdc\x90\xa6\xe0\x5d\x19\xa7\xe2\x0a\xb9\x82\x9c\xdf\xfd\x31\x21\x9b\x68\xf1\xbd\x25\x8b\xe8\x27\x4b\x92\x65\x4a\xa2\x6d\x16\xad\xd3\x38\x59\x93\x79\xb2\xfa\x4a\xd2\x88\x10\x78\x3e\x5b\x92\xe5\xe2\x0b\x38\x78\xc2\x1b\xb4\xee\xd5\x1d\xfa\xbe\x35\xda\x95\xe7\x82\xef\xd8\xde\x24\x75\x00\x00\x8e\x78\xff\x04\xd7\xac\xec\x06\xf5\xc0\xb6\xe1\x54\x7d\x1b\xd2\xb6\x92\xe9\xa0\x7d\xaf\x07\x0e\xde\xeb\x6b\x9f\x36\x4c\x34\x81\x5f\x37\xe2\x0d\xb9\x41\xbf\xca\xa0\x5b\x74\x90\x5f\xbc\x25\x68\x48\x35\xdd\x77\xf0\x66\x4f\x45\xf5\x6e\x44\x48\xa8\x26\x7f\x01\x00\x00\xff\xff\x70\xb7\x4a\x65\xa6\x02\x00\x00")

func srcStoreIndexTsBytes() ([]byte, error) {
	return bindataRead(
		_srcStoreIndexTs,
		"src/store/index.ts",
	)
}

func srcStoreIndexTs() (*asset, error) {
	bytes, err := srcStoreIndexTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/store/index.ts", size: 678, mode: os.FileMode(420), modTime: time.Unix(1550809191, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcViewsDashboardViewTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x50\xc1\x6e\x83\x30\x14\xbb\xbf\xaf\xf0\xad\x64\xea\xe0\x3e\xd1\x1e\xb6\x9e\xa7\x69\xdb\x0f\xbc\x26\xe9\x8a\x54\x5e\x50\x12\x10\x15\xe2\xdf\xa7\x30\x60\x15\x37\xfb\xd9\x71\x2c\x57\x75\xe3\x7c\xc4\x13\x38\xe0\xd3\xb2\x8e\xb8\x78\x57\x63\xe7\x13\xde\xd1\x2c\x0f\xd0\x4e\xc4\xea\x88\xf1\x51\x7f\xf6\xd6\xb4\xfd\xea\x7a\xe7\xee\x95\xfd\x9b\xab\x1b\x27\x56\x96\xa4\x3c\x2f\xf4\x72\x0a\x85\x70\x57\xfd\x70\xac\x9c\x24\x78\x66\x9f\xaf\xe2\x8e\x48\xdf\x38\x04\x9c\x38\x5c\xcf\x8e\xbd\x81\xed\xa3\x15\x33\x37\xcb\xd7\xe4\x92\xe5\xbe\x07\xcb\xfd\x88\x81\x00\x6f\xc5\x58\x9f\xa9\x89\x24\x1a\x5b\x2f\xc8\x26\x02\x94\xa6\xea\x8e\x33\x06\xca\x6d\xc9\x62\xd1\xca\x62\x35\x2a\x02\x46\x1a\x89\xb4\x93\x10\x51\x73\xf3\x15\x39\xda\x6f\xf7\xe1\x5d\x13\x70\x40\x16\x12\x7f\x49\x15\x14\x0e\x47\x64\xc3\xa8\x1e\xdc\xa7\x2a\x34\x1c\xf5\xf5\xff\xc1\x30\x12\xd9\x7e\x5a\xc9\xd8\x0b\xb7\xb7\xb8\x2c\x9a\x6a\x6e\x3e\xd8\xff\x9d\x36\x29\xa4\xb2\x75\x18\x45\xbf\x01\x00\x00\xff\xff\x52\x23\x81\x2c\xb8\x01\x00\x00")

func srcViewsDashboardViewTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcViewsDashboardViewTsx,
		"src/views/dashboard.view.tsx",
	)
}

func srcViewsDashboardViewTsx() (*asset, error) {
	bytes, err := srcViewsDashboardViewTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/views/dashboard.view.tsx", size: 440, mode: os.FileMode(420), modTime: time.Unix(1550809030, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcViewsLoginViewTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4b\x6f\xe3\x36\x10\xbe\xeb\x57\x0c\x04\x14\x96\x0b\x47\x4a\x8b\xf6\x62\x58\x06\xb6\x59\xf4\x01\xf4\x10\x6c\x0a\xf4\xcc\x25\xc7\x16\x37\x14\x29\x90\xa3\xc4\x89\xa0\xff\x5e\x90\x92\x6c\xca\x51\x5f\x8b\xf8\x62\x72\x1e\x1f\x67\x3e\xcd\x43\xd6\x8d\xb1\x04\xdf\x02\x73\xf0\x09\x19\x27\x38\x58\x53\xc3\xca\xfa\xf3\x2a\x19\xd5\x1d\xfc\xd4\x12\x19\xbd\x81\x9f\x8d\xad\x37\xf0\x8b\x95\x62\x03\xbf\x22\x13\x68\x37\xf0\x80\xc7\x1a\x35\x41\x3f\xfa\x3a\xac\x99\x26\xc9\x6f\x5a\x79\x33\xc7\x99\xa9\xb8\x73\xc5\x74\xcf\x6b\xa9\x73\xee\x5c\xf4\x22\x37\x5a\x23\xbf\xa0\x06\xa4\x1b\x8b\xa2\x3d\x45\x56\xca\x1c\xa5\x3e\xdb\xe4\x79\xc1\x38\x49\xa3\x5d\x11\x14\xf9\x70\x8b\xec\x3f\xa1\x90\x76\x01\xd6\xb4\x84\x76\x95\x24\x5c\x31\xe7\xe0\xf7\x80\x8a\x27\x42\x2d\x46\x5e\xf2\x3b\x53\x37\x46\xa3\xa6\x1d\xd3\x2f\x1b\x60\xfa\x65\x0f\x5d\x02\xe0\x88\x11\x42\x19\xce\x00\xad\x43\xab\x59\x8d\x5b\x58\xad\x36\x41\xd2\x30\xe7\x9e\x8d\x15\x5e\x92\x00\xf4\x09\x40\xc5\xb4\x50\xf8\xd0\x7e\xae\x25\x65\xeb\xd1\x93\x2a\xe9\xf2\xc6\x9a\xc6\xe5\x21\xf6\x2c\x08\x02\x7a\x3e\xa1\x6e\x20\x12\x4e\xc0\xeb\x11\xd5\xa2\x16\x68\xcf\x78\xf2\x00\x59\x84\x29\xdd\x87\x96\x2a\x63\xe5\x2b\x8a\xc9\xc4\xfb\x50\x6b\x35\x64\xe3\x15\x60\x37\x11\x74\x96\x00\x90\x29\xbb\x2e\xba\xfb\x9c\xa8\x1a\xb3\x2c\x04\x73\xd5\x67\xc3\xac\x58\x45\x26\x7d\x7f\xbe\x14\xfb\xf1\xb8\x0e\xff\x7d\x92\x2c\x3c\xbc\x13\xf2\x69\x7f\x09\xc2\xd7\x17\x10\x9e\xe8\x83\x92\x47\x5d\xa6\x1c\x35\xa1\x4d\xc1\xd1\x8b\xc2\xb2\xeb\xa0\x42\x79\xac\x68\x0b\xab\xef\x6e\x6f\xbf\x59\x41\xdf\xc3\x13\x5a\x92\x9c\xa9\xd1\xa3\x96\x42\x28\x4c\xf7\x51\x4c\x01\x35\xbf\x33\xaa\xad\xf5\x05\xa9\x66\xa7\x3f\xa5\xa0\x6a\x0b\x3f\xfc\x78\x0b\x7d\xbf\x9f\x25\xba\x1b\x6a\x1c\x98\x2b\xd3\xea\xfb\x14\xb8\x51\xc6\x96\x29\x21\x53\xe9\x52\x80\xc5\x95\xbb\x6f\x17\x70\xf2\x15\xcb\x54\x31\x7b\x9c\x07\x14\x2c\xa6\xe6\x71\xc4\xf8\x23\x8a\x6b\xfd\x88\x91\xff\xa6\x9b\x96\xde\xe8\x00\x0e\xaa\x95\x62\x41\x2e\xb9\xd1\x65\xea\xeb\x26\xfd\x1b\xed\xbd\x71\xd2\x37\x47\x99\x2a\x3c\xd0\x92\x55\xa3\x18\xc7\xca\x28\x81\x76\x80\xf2\x9f\x7c\xc9\xd0\xe8\xbb\x8a\xe9\x23\x96\x1d\x3e\xf9\x5c\xca\x3d\x74\x0b\x66\x63\x8d\x3b\xa4\x07\x5f\xc0\x59\x17\x75\x4b\x70\xcc\xc9\x73\x44\xf9\x13\x53\x2d\x42\xbf\x5e\xc0\x88\x0a\x6b\xfa\x15\xef\xcb\x99\x32\xfc\xf1\x9d\x38\xbb\x1f\x3b\x74\xc9\x90\x5e\x1a\x2c\xd3\xe6\x1f\x2c\xbe\x9a\xd5\xcb\xc4\x79\x67\x56\x87\x25\xb0\xe0\x1f\xb7\xc5\xff\x20\x3c\x6e\x8c\x65\x02\x94\xe4\x8f\xff\x9a\xff\x90\x65\x63\xc3\xff\x47\x3c\xb0\x56\x51\xb6\x94\xe6\x48\xd5\x7c\xfc\xfe\x37\x3a\xde\xb2\x01\xc3\x96\x78\xcb\x52\x31\xd0\xf4\xa6\xd3\x8b\xb1\xd5\xaf\x46\x44\xe1\x6b\x75\x36\xa7\x8a\x68\x50\x45\x43\x31\x88\xa7\xfb\xae\x38\x4f\xcc\x61\xfe\xf7\x49\xc2\x8d\x76\x04\x35\x6b\x42\x21\xfc\x61\xee\xfd\xe0\x87\x12\xb2\xb0\x2f\xb6\x7e\x65\xad\x3d\x8b\x99\xa7\x31\xde\x07\x5b\xb8\xac\x99\xd9\xa2\xf0\x1b\xec\xcb\x33\xcd\xf4\x5f\x9e\x29\xe9\xd7\xd1\x6b\x1f\xa5\x6b\x18\xf1\xea\xf2\xa0\xc7\x0f\x3b\xcc\x47\x85\xa7\xb0\x7a\xc5\xf0\x5d\xa6\xb5\xee\x07\xff\x55\xa4\x9b\x41\x74\x05\x97\xac\xb3\xc0\xf3\x3a\xf9\x2b\x00\x00\xff\xff\xc0\x3c\xa9\xb7\xab\x08\x00\x00")

func srcViewsLoginViewTsxBytes() ([]byte, error) {
	return bindataRead(
		_srcViewsLoginViewTsx,
		"src/views/login.view.tsx",
	)
}

func srcViewsLoginViewTsx() (*asset, error) {
	bytes, err := srcViewsLoginViewTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/views/login.view.tsx", size: 2219, mode: os.FileMode(420), modTime: time.Unix(1550809000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".DS_Store": Ds_store,
	"Gopkg.toml": gopkgToml,
	"package.json": packageJson,
	"tsconfig.json": tsconfigJson,
	"public/favicon.ico": publicFaviconIco,
	"public/index.html": publicIndexHtml,
	"public/manifest.json": publicManifestJson,
	"server/app.go": serverAppGo,
	"server/db.go": serverDbGo,
	"server/main.go": serverMainGo,
	"server/middleware.go": serverMiddlewareGo,
	"server/api/routes.go": serverApiRoutesGo,
	"src/App.css": srcAppCss,
	"src/App.test.tsx": srcAppTestTsx,
	"src/App.tsx": srcAppTsx,
	"src/index.css": srcIndexCss,
	"src/index.tsx": srcIndexTsx,
	"src/react-app-env.d.ts": srcReactAppEnvDTs,
	"src/serviceWorker.ts": srcServiceworkerTs,
	"src/actions/login.action.ts": srcActionsLoginActionTs,
	"src/actions/logout.action.ts": srcActionsLogoutActionTs,
	"src/constants/action-types.ts": srcConstantsActionTypesTs,
	"src/components/navigation/navbar.component.tsx": srcComponentsNavigationNavbarComponentTsx,
	"src/components/navigation/privateRoute.component.tsx": srcComponentsNavigationPrivaterouteComponentTsx,
	"src/modules/api.module.ts": srcModulesApiModuleTs,
	"src/modules/endpoint.module.ts": srcModulesEndpointModuleTs,
	"src/reducers/index.ts": srcReducersIndexTs,
	"src/reducers/user.reducer.ts": srcReducersUserReducerTs,
	"src/store/index.ts": srcStoreIndexTs,
	"src/views/dashboard.view.tsx": srcViewsDashboardViewTsx,
	"src/views/login.view.tsx": srcViewsLoginViewTsx,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".DS_Store": &bintree{Ds_store, map[string]*bintree{}},
	"Gopkg.toml": &bintree{gopkgToml, map[string]*bintree{}},
	"package.json": &bintree{packageJson, map[string]*bintree{}},
	"public": &bintree{nil, map[string]*bintree{
		"favicon.ico": &bintree{publicFaviconIco, map[string]*bintree{}},
		"index.html": &bintree{publicIndexHtml, map[string]*bintree{}},
		"manifest.json": &bintree{publicManifestJson, map[string]*bintree{}},
	}},
	"server": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"routes.go": &bintree{serverApiRoutesGo, map[string]*bintree{}},
		}},
		"app.go": &bintree{serverAppGo, map[string]*bintree{}},
		"db.go": &bintree{serverDbGo, map[string]*bintree{}},
		"main.go": &bintree{serverMainGo, map[string]*bintree{}},
		"middleware.go": &bintree{serverMiddlewareGo, map[string]*bintree{}},
	}},
	"src": &bintree{nil, map[string]*bintree{
		"App.css": &bintree{srcAppCss, map[string]*bintree{}},
		"App.test.tsx": &bintree{srcAppTestTsx, map[string]*bintree{}},
		"App.tsx": &bintree{srcAppTsx, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"login.action.ts": &bintree{srcActionsLoginActionTs, map[string]*bintree{}},
			"logout.action.ts": &bintree{srcActionsLogoutActionTs, map[string]*bintree{}},
		}},
		"components": &bintree{nil, map[string]*bintree{
			"navigation": &bintree{nil, map[string]*bintree{
				"navbar.component.tsx": &bintree{srcComponentsNavigationNavbarComponentTsx, map[string]*bintree{}},
				"privateRoute.component.tsx": &bintree{srcComponentsNavigationPrivaterouteComponentTsx, map[string]*bintree{}},
			}},
		}},
		"constants": &bintree{nil, map[string]*bintree{
			"action-types.ts": &bintree{srcConstantsActionTypesTs, map[string]*bintree{}},
		}},
		"index.css": &bintree{srcIndexCss, map[string]*bintree{}},
		"index.tsx": &bintree{srcIndexTsx, map[string]*bintree{}},
		"modules": &bintree{nil, map[string]*bintree{
			"api.module.ts": &bintree{srcModulesApiModuleTs, map[string]*bintree{}},
			"endpoint.module.ts": &bintree{srcModulesEndpointModuleTs, map[string]*bintree{}},
		}},
		"react-app-env.d.ts": &bintree{srcReactAppEnvDTs, map[string]*bintree{}},
		"reducers": &bintree{nil, map[string]*bintree{
			"index.ts": &bintree{srcReducersIndexTs, map[string]*bintree{}},
			"user.reducer.ts": &bintree{srcReducersUserReducerTs, map[string]*bintree{}},
		}},
		"serviceWorker.ts": &bintree{srcServiceworkerTs, map[string]*bintree{}},
		"store": &bintree{nil, map[string]*bintree{
			"index.ts": &bintree{srcStoreIndexTs, map[string]*bintree{}},
		}},
		"views": &bintree{nil, map[string]*bintree{
			"dashboard.view.tsx": &bintree{srcViewsDashboardViewTsx, map[string]*bintree{}},
			"login.view.tsx": &bintree{srcViewsLoginViewTsx, map[string]*bintree{}},
		}},
	}},
	"tsconfig.json": &bintree{tsconfigJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

